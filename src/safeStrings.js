module.exports = [
"<dummy>",
"",
"(GC roots)",
"(Strong roots)",
"(Internal string)",
"(Extensions)",
"(Isolate)",
"(Relocatable)",
"(Compilation cache)",
"(Handle scope)",
"(Builtins)",
"(Global handles)",
"(Eternal handles)",
"(Internalized strings)",
"system / Map",
"system / Oddball",
"system",
"system / Map (String)",
"system / Map (AsciiString)",
"system / Map (ConsString)",
"system / Map (ConsAsciiString)",
"system / Map (SlicedString)",
"system / Map (SlicedAsciiString)",
"system / Map (ExternalString)",
"system / Map (ExternalStringWithOneByteData)",
"system / Map (ExternalAsciiString)",
"system / Map (ShortExternalString)",
"system / Map (ShortExternalStringWithOneByteData)",
"system / Map (InternalizedString)",
"system / Map (AsciiInternalizedString)",
"system / Map (ExternalInternalizedString)",
"system / Map (ExternalInternalizedStringWithOneByteData)",
"system / Map (ExternalAsciiInternalizedString)",
"system / Map (ShortExternalInternalizedString)",
"system / Map (ShortExternalInternalizedStringWithOneByteData)",
"system / Map (ShortExternalAsciiInternalizedString)",
"system / Map (ShortExternalAsciiString)",
"number",
"Object",
"system / PolymorphicCodeCache",
"(JSEntryStub code)",
"system / Cell",
"Array",
"__proto__",
"arguments",
"Arguments",
"call",
"apply",
"caller",
"boolean",
"Boolean",
"callee",
"constructor",
".result",
".for.",
".iterator",
".generator_object",
"eval",
"function",
"length",
"module",
"name",
"native",
"null",
"Number",
"NaN",
"RegExp",
"source",
"global",
"ignoreCase",
"multiline",
"input",
"index",
"lastIndex",
"object",
"literals",
"prototype",
"string",
"String",
"symbol",
"Symbol",
"for",
"for_api",
"for_intern",
"private_api",
"private_intern",
"Date",
"this",
"toString",
"CharAt",
"undefined",
"valueOf",
"stack",
"toJSON",
"InitializeVarGlobal",
"InitializeConstGlobal",
"KeyedLoadElementMonomorphic",
"KeyedStoreElementMonomorphic",
"kStackOverflowBoilerplate",
"illegal access",
"get",
"set",
"%map",
"%elements",
"%length",
"%cell_value",
"Function",
"illegal argument",
"MakeReferenceError",
"MakeSyntaxError",
"MakeTypeError",
"unknown_label",
" ",
"exec",
"0",
"GlobalEval",
"v8::IdentityHash",
"(closure)",
"use strict",
".",
"(anonymous function)",
"==",
"===",
"Infinity",
"-Infinity",
"v8::hidden_stack_trace",
"(?:)",
"Generator",
"throw",
"done",
"value",
"next",
"byteLength",
"byteOffset",
"buffer",
"v8::intl_initialized_marker",
"v8::intl_object",
"system / NativeContext",
"(CEntryStub code)",
"foo.heapsnapshot",
"(FunctionApply builtin)",
"system / Context",
"(code for exports.writeSnapshot)",
"(ArgumentsAdaptorTrampoline builtin)",
"(FUNCTION code)",
"(concatenated string)",
"Module",
"require",
"(code for Module._compile)",
"(code for exports.run)",
"(code for compileScript)",
"fs.Stats",
"Buffer",
"(code for compilePath)",
"push",
"(sliced string)",
"(code for Module._extensions..js)",
".js",
"(code for Module.load)",
"(code for Module._load)",
"(code for Module.runMain)",
"EventEmitter",
"startup",
"(code for startup)",
"process",
"(JSEntryTrampoline builtin)",
"address",
"args",
"argv",
"_asyncQueue",
"async",
"atime",
"birthtime",
"blksize",
"blocks",
"bytes",
"bytesParsed",
"callback",
"change",
"close",
"code",
"compare",
"ctime",
"cwd",
"debugPort",
"debug",
"detached",
"dev",
"_disposed",
"domain",
"exchange",
"idle",
"irq",
"enter",
"envPairs",
"env",
"errno",
"error",
"_events",
"execArgv",
"execPath",
"_exiting",
"exitCode",
"exit",
"expire",
"exponent",
"exports",
"ext_key_usage",
"family",
"_fatalException",
"fd",
"file",
"fingerprint",
"flags",
"FSEvent",
"gid",
"handle",
"headers",
"heap_size_limit",
"heapTotal",
"heapUsed",
"hostmaster",
"ignore",
"_immediateCallback",
"infoAccess",
"inherit",
"ino",
"internal",
"IPv4",
"ipv6",
"IPv6",
"issuer",
"issuerCertificate",
"killSignal",
"mac",
"mark-sweep-compact",
"maxBuffer",
"message",
"method",
"minttl",
"mode",
"model",
"modulus",
"mtime",
"_needImmediateCallback",
"netmask",
"nice",
"nlink",
"nsname",
"OCSPRequest",
"offset",
"onchange",
"onclienthello",
"oncomplete",
"onconnection",
"ondone",
"onerror",
"onexit",
"onhandshakedone",
"onhandshakestart",
"onmessage",
"onnewsession",
"onnewsessiondone",
"onocspresponse",
"onread",
"onselect",
"onsignal",
"onstop",
"output",
"order",
"owner",
"Parse Error",
"path",
"PBKDF2 Error",
"pid",
"pipe",
"port",
"preference",
"priority",
"processed",
"raw",
"rdev",
"readable",
"receivedShutdown",
"refresh",
"regexp",
"rename",
"replacement",
"retry",
"rss",
"serial",
"scavenge",
"scopeid",
"sentShutdown",
"serialNumber",
"service",
"servername",
"sessionId",
"shouldKeepAlive",
"signal",
"size",
"_smalloc_p",
"Invalid SNI context",
"sni_context",
"speed",
"statusCode",
"statusMessage",
"status",
"stdio",
"subject",
"subjectaltname",
"sys",
"syscall",
"_tickCallback",
"_tickDomainCallback",
"timeout",
"times",
"timestamp",
"title",
"tls_npn",
"tls_ocsp",
"tls_sni",
"tls",
"tlsTicket",
"total_heap_size_executable",
"total_heap_size",
"total_physical_size",
"type",
"uid",
"<unknown>",
"upgrade",
"url",
"used_heap_size",
"user",
"uv",
"valid_from",
"valid_to",
"verifyError",
"versionMajor",
"versionMinor",
"version",
"weight",
"windowsVerbatimArguments",
"wrap",
"writable",
"writeQueueSize",
"x-forwarded-for",
"ZERO_RETURN",
"(context data)",
"system / FunctionTemplateInfo",
"InternalArray",
"Instantiate",
"node.js",
"(Illegal builtin)",
"(EmptyFunction builtin)",
"(ArrayPush builtin)",
"(ArrayPop builtin)",
"(ArrayShift builtin)",
"(ArrayUnshift builtin)",
"(ArraySlice builtin)",
"(ArraySplice builtin)",
"(ArrayConcat builtin)",
"(HandleApiCall builtin)",
"(HandleApiCallConstruct builtin)",
"(HandleApiCallAsFunction builtin)",
"(HandleApiCallAsConstructor builtin)",
"(StrictModePoisonPill builtin)",
"(InOptimizationQueue builtin)",
"(JSConstructStubCountdown builtin)",
"(JSConstructStubGeneric builtin)",
"(JSConstructStubApi builtin)",
"(JSConstructEntryTrampoline builtin)",
"(CompileUnoptimized builtin)",
"(CompileOptimized builtin)",
"(CompileOptimizedConcurrent builtin)",
"(NotifyDeoptimized builtin)",
"(NotifySoftDeoptimized builtin)",
"(NotifyLazyDeoptimized builtin)",
"(NotifyStubFailure builtin)",
"(NotifyStubFailureSaveDoubles builtin)",
"(LoadIC_Miss builtin)",
"(KeyedLoadIC_Miss builtin)",
"(StoreIC_Miss builtin)",
"(KeyedStoreIC_Miss builtin)",
"(LoadIC_Getter_ForDeopt builtin)",
"(KeyedLoadIC_Initialize builtin)",
"(KeyedLoadIC_PreMonomorphic builtin)",
"(KeyedLoadIC_Generic builtin)",
"(KeyedLoadIC_String builtin)",
"(KeyedLoadIC_IndexedInterceptor builtin)",
"(KeyedLoadIC_SloppyArguments builtin)",
"(StoreIC_Setter_ForDeopt builtin)",
"(KeyedStoreIC_Initialize builtin)",
"(KeyedStoreIC_PreMonomorphic builtin)",
"(KeyedStoreIC_Generic builtin)",
"(KeyedStoreIC_Initialize_Strict builtin)",
"(KeyedStoreIC_PreMonomorphic_Strict builtin)",
"(KeyedStoreIC_Generic_Strict builtin)",
"(KeyedStoreIC_SloppyArguments builtin)",
"(FunctionCall builtin)",
"(InternalArrayCode builtin)",
"(ArrayCode builtin)",
"(StringConstructCode builtin)",
"(OnStackReplacement builtin)",
"(InterruptCheck builtin)",
"(OsrAfterStackCheck builtin)",
"(StackCheck builtin)",
"(MarkCodeAsExecutedOnce builtin)",
"(MarkCodeAsExecutedTwice builtin)",
"(MakeQuadragenarianCodeYoungAgainOddMarking builtin)",
"(MakeQuadragenarianCodeYoungAgainEvenMarking builtin)",
"(MakeQuinquagenarianCodeYoungAgainOddMarking builtin)",
"(MakeQuinquagenarianCodeYoungAgainEvenMarking builtin)",
"(MakeSexagenarianCodeYoungAgainOddMarking builtin)",
"(MakeSexagenarianCodeYoungAgainEvenMarking builtin)",
"(MakeSeptuagenarianCodeYoungAgainOddMarking builtin)",
"(MakeSeptuagenarianCodeYoungAgainEvenMarking builtin)",
"(MakeOctogenarianCodeYoungAgainOddMarking builtin)",
"(MakeOctogenarianCodeYoungAgainEvenMarking builtin)",
"(LoadIC_Slow builtin)",
"(KeyedLoadIC_Slow builtin)",
"(StoreIC_Slow builtin)",
"(KeyedStoreIC_Slow builtin)",
"(LoadIC_Normal builtin)",
"(StoreIC_Normal builtin)",
"(Return_DebugBreak builtin)",
"(CallFunctionStub_DebugBreak builtin)",
"(CallConstructStub_DebugBreak builtin)",
"(CallConstructStub_Recording_DebugBreak builtin)",
"(CallICStub_DebugBreak builtin)",
"(LoadIC_DebugBreak builtin)",
"(KeyedLoadIC_DebugBreak builtin)",
"(StoreIC_DebugBreak builtin)",
"(KeyedStoreIC_DebugBreak builtin)",
"(CompareNilIC_DebugBreak builtin)",
"(Slot_DebugBreak builtin)",
"(PlainReturn_LiveEdit builtin)",
"(FrameDropper_LiveEdit builtin)",
"runAsyncQueue",
"loadAsyncQueue",
"unloadAsyncQueue",
"NativeBuffer",
"UDP",
"true",
"false",
"hole",
"uninitialized",
"arguments_marker",
"no_interceptor_result_sentinel",
"termination_exception",
"exception",
"(code deopt data)",
"system / ExecutableAccessorInfo",
"system / Foreign",
"(code for Object)",
"(function scope info)",
"native v8natives.js",
"keys",
"create",
"defineProperty",
"defineProperties",
"freeze",
"getPrototypeOf",
"setPrototypeOf",
"getOwnPropertyDescriptor",
"getOwnPropertyNames",
"is",
"isExtensible",
"isFrozen",
"isSealed",
"preventExtensions",
"seal",
"deliverChangeRecords",
"getNotifier",
"observe",
"unobserve",
"Empty",
"(function literals)",
"toLocaleString",
"hasOwnProperty",
"isPrototypeOf",
"propertyIsEnumerable",
"__defineGetter__",
"__lookupGetter__",
"__defineSetter__",
"__lookupSetter__",
"bind",
"() {}",
"system / AccessorPair",
"ThrowTypeError",
"(object elements)",
"(shared function info)",
"escape",
"URIError",
"MathConstructor",
"Error",
"ArrayBuffer",
"isNaN",
"unescape",
"ReferenceError",
"Int8Array",
"Uint8ClampedArray",
"DataView",
"decodeURIComponent",
"parseFloat",
"Uint16Array",
"Int16Array",
"JSON",
"RangeError",
"TypeError",
"WeakSet",
"Float32Array",
"isFinite",
"Uint32Array",
"WeakMap",
"encodeURIComponent",
"Uint8Array",
"Int32Array",
"decodeURI",
"SyntaxError",
"encodeURI",
"parseInt",
"Float64Array",
"EvalError",
"Promise",
"(object properties)",
"system / Box",
"(code for Function)",
"(construct stub code for Array)",
"isArray",
"(code for Number)",
"isInteger",
"isSafeInteger",
"(code for Boolean)",
"(code for String)",
"native string.js",
"fromCharCode",
"(code for Date)",
"native date.js",
"UTC",
"parse",
"now",
"(code for RegExp)",
"native regexp.js",
"RegExpGetLastMatch",
"RegExpGetLastParen",
"RegExpGetLeftContext",
"RegExpGetRightContext",
"stringify",
"(code for ArrayBuffer)",
"native arraybuffer.js",
"isView",
"(code for Uint8Array)",
"native typedarray.js",
"(code for Int8Array)",
"(code for Uint16Array)",
"(code for Int16Array)",
"(code for Uint32Array)",
"(code for Int32Array)",
"(code for Float32Array)",
"(code for Float64Array)",
"(code for Uint8ClampedArray)",
"(code for DataView)",
"(code for WeakMap)",
"native weak_collection.js",
"(code for WeakSet)",
"context_extension",
"(context func. result caches)",
"(context norm. map cache)",
"builtins",
"ObservedArrayPop",
"toLocaleLowerCase",
"PromiseInit",
"ObjectInfoRemovePerformingType",
"Revive",
"accept",
"resolve",
"toDateString",
"atan",
"reduceRight",
"forEach",
"sort",
"CreateDate",
"getDate",
"RegExpMakeCaptureGetter",
"GetObjectInfoMap",
"TimeClip",
"toUTCString",
"toTimeString",
"CallbackInfoGet",
"ComputeSpliceDeleteCount",
"Int16ArrayConstructor",
"SourceLocationRestrict",
"EnqueueSpliceRecord",
"getDay",
"TimeStringUTC",
"cos",
"ObjectInfoGetFromNotifier",
"SHL",
"ScriptNameOrSourceURL",
"Int8ArrayConstructByArrayBuffer",
"FormatMessage",
"GetCallbackInfoMap",
"Float64ArrayConstructByArrayLike",
"SparseJoinWithSeparator",
"ObserverGetCallback",
"ceil",
"sqrt",
"InstantiateFunction",
"CaptureString",
"isAlphaNumeric",
"CALL_FUNCTION_PROXY_AS_CONSTRUCTOR",
"NativeObjectObserve",
"IsValidHex",
"Int16ArrayConstructByArrayBuffer",
"getUint32",
"GetWeakMapWrapper",
"getFloat32",
"lastIndexOf",
"NumberConstructor",
"SimpleSlice",
"Uint8ArrayConstructByArrayBuffer",
"ConfigureTemplateInstance",
"DateString",
"TO_OBJECT",
"reduce",
"trim",
"test",
"then",
"ScriptSourceLine",
"subarray",
"Uint16ArrayConstructByArrayLike",
"indexOf",
"ObjectInfoGetNotifier",
"setInt16",
"toLocaleDateString",
"fontsize",
"setYear",
"ArrayBufferConstructor",
"TypeMapHasType",
"ThrowDateTypeError",
"DataViewConstructor",
"CALL_NON_FUNCTION",
"small",
"TypeMapRemoveType",
"PromiseCoerce",
"getMonth",
"Float32ArrayConstructByLength",
"match",
"getInt32",
"ObservedArrayUnshift",
"ToStringCheckErrorObject",
"ArraySlice",
"BIT_XOR",
"substring",
"concat",
"RegExpConstructor",
"trimLeft",
"captureStackTrace",
"IsDataDescriptor",
"Float64ArrayConstructor",
"ObserverGetAcceptTypes",
"getUTCHours",
"URIEncodeOctets",
"APPLY_PREPARE",
"TypeMapIsDisjointFrom",
"GetPendingObservers",
"SetUpError",
"ObjectInfoAddObserver",
"PropertyDescriptor",
"CallSiteGetLineNumber",
"LocalTimezoneString",
"max",
"AcceptArgIsValid",
"DoRegExpExec",
"ObserverIsActive",
"ToPropertyDescriptor",
"SetUpMath",
"setUTCMilliseconds",
"GetOwnEnumerablePropertyNames",
"JSONSerialize",
"STRING_ADD_RIGHT",
"TypeMapAddType",
"DateConstructor",
"charCodeAt",
"getUTCMilliseconds",
"setMilliseconds",
"FILTER_KEY",
"InternalPackedArray",
"FromGenericPropertyDescriptor",
"SUB",
"Int32ArrayConstructByArrayLike",
"GetTypeName",
"InstallFunctions",
"fontcolor",
"DIV",
"getUTCDate",
"SetUpJSON",
"PromiseIdResolveHandler",
"SerializeArray",
"Uint32ArrayConstructor",
"setUTCHours",
"DoConstructRegExp",
"has",
"GetObservationState",
"DELETE",
"SetUpNumber",
"ToObject",
"SetUpArray",
"SetupObjectObserve",
"ChangeObserversIsOptimized",
"InstallConstants",
"strike",
"PromiseEnqueue",
"getMinutes",
"Float64ArrayConstructByArrayBuffer",
"SmartSlice",
"InstallGetterSetter",
"SetUpRegExp",
"getFullYear",
"STRING_ADD_LEFT",
"SAR",
"setUTCSeconds",
"GetNextCallbackPriority",
"ToNameArray",
"IsPrimitive",
"TrigonometricInterpolation",
"ADD",
"ScriptLineCount",
"BuildResultFromMatchInfo",
"Uint32ArrayConstructByArrayBuffer",
"CallTrap0",
"ObserverCreate",
"setMinutes",
"delete",
"ObjectInfoGet",
"imul",
"WeakSetConstructor",
"CallSiteIsNative",
"tan",
"GetStackFrames",
"asin",
"SourceLocationSourceText",
"BeginPerformSplice",
"GetPositionInLine",
"DefaultNumber",
"CallbackInfoNormalize",
"URIEncodeSingle",
"MakeTime",
"setFullYear",
"ArrayUnshift",
"ComputeSpliceStartIndex",
"CallTrap2",
"setFloat32",
"Join",
"URIAddEncodedOctetToBuffer",
"ConvertToLocaleString",
"URIEncodePair",
"ObjectInfoRemoveObserver",
"SetUpUri",
"FromPropertyDescriptor",
"InstallGetter",
"toLowerCase",
"getUTCDay",
"StringReplaceNonGlobalRegExpWithFunction",
"SetUpBoolean",
"STACK_OVERFLOW",
"race",
"Int32ArrayConstructByArrayBuffer",
"FormatEvalOrigin",
"CallSiteIsToplevel",
"Uint32ArrayConstructByArrayLike",
"ToInteger",
"Uint8ArrayConstructor",
"Uint8ArrayConstructByArrayLike",
"SetPendingObservers",
"TypedArraySetFromArrayLike",
"map",
"getFloat64",
"min",
"add",
"PromiseNopResolver",
"CallSiteGetMethodName",
"slice",
"TO_STRING",
"GetTrap",
"toLocaleTimeString",
"MOD",
"filter",
"toPrecision",
"ArrayPop",
"EQUALS",
"MakeGenericError",
"getUTCFullYear",
"ExpandReplacement",
"IsPromise",
"MakeDay",
"bold",
"ObjectInfoEnqueueInternalChangeRecord",
"STRICT_EQUALS",
"setUTCMinutes",
"FunctionSourceString",
"SameValue",
"BooleanConstructor",
"SetUpWeakSet",
"ConvertDescriptorArrayToDescriptor",
"CallbackDeliverPending",
"SerializeObject",
"CallSiteGetThis",
"ToPrimitive",
"SetUpWeakMap",
"GetSourceLine",
"ToNumber",
"reject",
"NewFunctionString",
"PromiseCreate",
"setUint32",
"SetUpString",
"NotifyChange",
"DefineOwnProperty",
"COMPARE",
"setUTCMonth",
"pow",
"ObserverEnqueueIfActive",
"getYear",
"NonNumberToNumber",
"CallSiteGetFunction",
"toFixed",
"GetPromiseStatus",
"SimpleMove",
"charAt",
"join",
"setTime",
"floor",
"LongDateString",
"SetupTypedArrays",
"GetPromiseValue",
"ObservedArrayPush",
"every",
"IsAccessorDescriptor",
"chain",
"SetUpObject",
"compile",
"CallbackInfoGetPriority",
"getInt8",
"INSTANCE_OF",
"CALL_NON_FUNCTION_AS_CONSTRUCTOR",
"setDate",
"CALL_FUNCTION_PROXY",
"MakeDate",
"Delete",
"CallSiteGetScriptNameOrSourceURL",
"SetUpArrayBuffer",
"URIDecodeOctets",
"RegExpExecNoTests",
"sin",
"Decode",
"getUTCMonth",
"CallSiteGetFileName",
"sub",
"Uint32ArrayConstructByLength",
"getUint16",
"ObserveMicrotaskRunner",
"CallSiteGetEvalOrigin",
"substr",
"Int16ArrayConstructByLength",
"Float32ArrayConstructByArrayBuffer",
"toUpperCase",
"CallSiteIsEval",
"DefineArrayProperty",
"TypedArraySetFromOverlappingTypedArray",
"SetUpPromise",
"Int8ArrayConstructByArrayLike",
"RunMicrotasks",
"ArraySplice",
"CallSiteToString",
"setInt8",
"abs",
"GetPropertyWithoutInvokingMonkeyGetters",
"DefineProxyProperty",
"ObjectInfoGetPerformingTypes",
"SetUpLockedPrototype",
"PromiseDone",
"BIT_AND",
"ObjectConstructor",
"link",
"toExponential",
"LocalTimezone",
"ToBoolean",
"clear",
"MUL",
"PromiseIdRejectHandler",
"ScriptLocationFromPosition",
"localeCompare",
"TwoDigitString",
"SetUpDate",
"NonStringToString",
"ErrorToStringDetectCycle",
"setMonth",
"ObservedArraySplice",
"Float32ArrayConstructor",
"catch",
"setUint16",
"ToCompletePropertyDescriptor",
"PromiseResolve",
"fixed",
"StringConstructor",
"FunctionConstructor",
"nullProtoObject",
"DefineObjectProperty",
"setFloat64",
"NativeObjectNotifierPerformChange",
"anchor",
"toISOString",
"TimeString",
"SourceSlice",
"TimeInYear",
"IsGenericDescriptor",
"getUTCMinutes",
"CallSiteGetTypeName",
"SetUpFunction",
"exp",
"Int8ArrayConstructor",
"CallSiteGetPosition",
"Uint8ArrayConstructByLength",
"getTime",
"PromiseSet",
"all",
"getHours",
"Int16ArrayConstructByArrayLike",
"getUint8",
"ObjectInfoHasActiveObservers",
"TypeMapCreate",
"SourceLocation",
"round",
"PromiseHandle",
"HexValueOf",
"TrimRegExp",
"Int32ArrayConstructor",
"performChange",
"ScriptLocationFromLine",
"toLocaleUpperCase",
"ConvertToString",
"ObjectGetOwnPropertyKeys",
"split",
"NoSideEffectToString",
"ObservedArrayShift",
"Float64ArrayConstructByLength",
"FormatStackTrace",
"normalize",
"reverse",
"StringReplaceGlobalRegExpWithFunction",
"CheckDateCacheCurrent",
"Uint8ClampedArrayConstructor",
"notify",
"EndPerformSplice",
"GetSortedArrayKeys",
"DefaultString",
"TO_NUMBER",
"random",
"ObjectInfoNormalizeChangeObservers",
"PadInt",
"replace",
"ToPositiveDataViewOffset",
"SparseJoin",
"big",
"CallbackInfoGetOrCreate",
"ArrayShift",
"toGMTString",
"ObjectInfoAddPerformingType",
"setInt32",
"ToUint32",
"TypeMapCreateFromList",
"SmartMove",
"MakeEvalError",
"getSeconds",
"GetStackTraceLine",
"setUTCDate",
"FormatString",
"IsInconsistentDescriptor",
"ObjectInfoGetObject",
"CallTrap1",
"URIHexCharsToCharCode",
"GetContextMaps",
"sup",
"OpaqueReference",
"MakeError",
"some",
"ToName",
"setSeconds",
"NativeObjectGetNotifier",
"DatePrintString",
"ToInt32",
"CanBeSafelyTreatedAsAnErrorObject",
"GetNotifierObjectInfoMap",
"StringSplitOnRegExp",
"Float32ArrayConstructByArrayLike",
"SourceSliceSourceText",
"WeakMapConstructor",
"search",
"Uint16ArrayConstructor",
"setUint8",
"ArrayConcat",
"Uint16ArrayConstructByLength",
"getInt16",
"Int8ArrayConstructByLength",
"IN",
"Uint16ArrayConstructByArrayBuffer",
"SparseReverse",
"ScriptSourceSlice",
"MakeRangeError",
"SetUpStackOverflowBoilerplate",
"italics",
"SetUpGlobal",
"PromiseReject",
"blink",
"log",
"EnqueueMicrotask",
"CharCodeToHex4Str",
"Int32ArrayConstructByLength",
"GetOwnProperty",
"Uint8ClampedArrayConstructByLength",
"ObjectInfoGetOrCreate",
"acos",
"setHours",
"UseSparseVariant",
"atan2",
"BIT_OR",
"ObjectInfoEnqueueExternalChangeRecord",
"SHR",
"JSONSerializeAdapter",
"Uint8ClampedArrayConstructByArrayBuffer",
"ToString",
"ToPositiveInteger",
"trimRight",
"defer",
"CallSiteIsConstructor",
"ProxyFix",
"Encode",
"Script",
"ToDetailString",
"CallSiteGetColumnNumber",
"ScriptLineFromPosition",
"getTimezoneOffset",
"GetLineNumber",
"ArrayPush",
"HtmlEscape",
"FormatErrorString",
"CallSiteGetFunctionName",
"SetupDataView",
"getMilliseconds",
"getUTCSeconds",
"Uint8ClampedArrayConstructByArrayLike",
"CallSite",
"setUTCFullYear",
"(code for EQUALS)",
"(code for STRICT_EQUALS)",
"(code for COMPARE)",
"(code for ADD)",
"(code for SUB)",
"(code for MUL)",
"(code for DIV)",
"(code for MOD)",
"(code for BIT_OR)",
"(code for BIT_AND)",
"(code for BIT_XOR)",
"(code for SHL)",
"(code for SAR)",
"(code for SHR)",
"(code for DELETE)",
"(code for IN)",
"(code for INSTANCE_OF)",
"(code for FILTER_KEY)",
"(code for CALL_NON_FUNCTION)",
"(code for CALL_NON_FUNCTION_AS_CONSTRUCTOR)",
"(code for CALL_FUNCTION_PROXY)",
"(code for CALL_FUNCTION_PROXY_AS_CONSTRUCTOR)",
"(code for TO_OBJECT)",
"(code for TO_NUMBER)",
"(code for TO_STRING)",
"(code for STRING_ADD_LEFT)",
"(code for STRING_ADD_RIGHT)",
"(code for APPLY_PREPARE)",
"(code for STACK_OVERFLOW)",
"(code for Script)",
"native messages.js",
"column_offset",
"id",
"line_offset",
"compilation_type",
"line_ends",
"context_data",
"eval_from_script",
"eval_from_script_position",
"eval_from_function_name",
"(construct stub code for InternalArray)",
"pop",
"splice",
"native runtime.js",
"(code for ToPrimitive)",
"(code for ToBoolean)",
"(code for ToNumber)",
"(code for NonNumberToNumber)",
"(code for ToString)",
"(code for NonStringToString)",
"(code for ToName)",
"(code for ToObject)",
"(code for ToUint32)",
"(code for IsPrimitive)",
"(code for DefaultString)",
"system / TypeFeedbackInfo",
"system / AllocationSite",
"(code for InstallFunctions)",
"(code for InstallGetter)",
"(code for InstallGetterSetter)",
"(code for InstallConstants)",
"(code for SetUpLockedPrototype)",
"(code for parseInt)",
"(code for parseFloat)",
"(code for SetUpGlobal)",
"(code for hasOwnProperty)",
"(code for __defineGetter__)",
"(code for keys)",
"(code for IsAccessorDescriptor)",
"(code for IsDataDescriptor)",
"(code for IsGenericDescriptor)",
"(code for IsInconsistentDescriptor)",
"(code for ToPropertyDescriptor)",
"(code for PropertyDescriptor)",
"(code for ConvertDescriptorArrayToDescriptor)",
"(code for DefineObjectProperty)",
"(code for DefineOwnProperty)",
"(code for getPrototypeOf)",
"(code for create)",
"(code for defineProperty)",
"(code for GetOwnEnumerablePropertyNames)",
"(code for defineProperties)",
"(code for __proto__)",
"(code for SetUpObject)",
"(code for SetUpBoolean)",
"(code for toString)",
"(code for SetUpNumber)",
"(code for SetUpFunction)",
"(code for $Array.enumerable_)",
"(code for $Array.writable_)",
"(code for $Array.configurable_)",
"(code for $Array.get_)",
"$Array.get_",
"(code for $Array.set_)",
"$Array.set_",
"(dependent code)",
"native array.js",
"(code for UseSparseVariant)",
"(code for Join)",
"(code for SimpleSlice)",
"(code for join)",
"(code for ArrayConcat)",
"(code for reverse)",
"(code for ArraySlice)",
"(code for sort)",
"(code for filter)",
"(code for indexOf)",
"(code for SetUpArray)",
"(code for SetUpArray.b)",
"SetUpArray.b",
"shift",
"unshift",
"(code for charAt)",
"(code for charCodeAt)",
"(code for lastIndexOf)",
"(code for match)",
"(code for replace)",
"(code for StringReplaceGlobalRegExpWithFunction)",
"(code for slice)",
"(code for split)",
"(code for StringSplitOnRegExp)",
"(code for substring)",
"(code for substr)",
"(code for toLowerCase)",
"(code for toUpperCase)",
"(code for SetUpString)",
"native uri.js",
"(code for SetUpUri)",
"native math.js",
"(code for MathConstructor)",
"Math",
"(code for floor)",
"(code for max)",
"(code for min)",
"(code for random)",
"(code for imul)",
"(code for SetUpMath)",
"(code for FormatString)",
"(code for MakeGenericError)",
"(code for FormatMessage)",
"(code for MakeRangeError)",
"(code for FormatErrorString)",
"(code for captureStackTrace)",
"(code for SetUpError)",
"(code for GetPropertyWithoutInvokingMonkeyGetters)",
"(code for ErrorToStringDetectCycle)",
"(code for SetUpStackOverflowBoilerplate)",
"CallSite#receiver",
"CallSite#function",
"CallSite#position",
"CallSite#strict_mode",
"(code for SetUpError.a)",
"SetUpError.a",
"(code for Error)",
"(code for d)",
"d",
"h",
"j",
"native apinatives.js",
"(code for Instantiate)",
"(code for InstantiateFunction)",
"(code for ConfigureTemplateInstance)",
"(code for SetUpDate)",
"native json.js",
"(code for Revive)",
"(code for parse)",
"(code for stringify)",
"(code for SetUpJSON)",
"(code for DoConstructRegExp)",
"(code for DoRegExpExec)",
"(code for BuildResultFromMatchInfo)",
"(code for RegExpExecNoTests)",
"(code for exec)",
"(code for test)",
"(code for RegExpMakeCaptureGetter)",
"(code for SetUpRegExp)",
"(code for SetUpArrayBuffer)",
"(code for SetupTypedArrays)",
"(code for SetupDataView)",
"(code for SetUpWeakMap)",
"(code for SetUpWeakSet)",
"native promise.js",
"(code for SetUpPromise)",
"Promise#status",
"Promise#value",
"Promise#onResolve",
"Promise#onReject",
"Promise#raw",
"native object-observe.js",
"(code for nullProtoObject)",
"(code for TypeMapCreate)",
"(code for TypeMapAddType)",
"(code for TypeMapCreateFromList)",
"(code for SetupObjectObserve)",
"system / ObjectTemplateInfo",
"system / InterceptorInfo",
"system / CallHandlerInfo",
"_startProfilerIdleNotifier",
"_stopProfilerIdleNotifier",
"_getActiveRequests",
"_getActiveHandles",
"reallyExit",
"abort",
"chdir",
"umask",
"getuid",
"setuid",
"setgid",
"getgid",
"getgroups",
"setgroups",
"initgroups",
"_kill",
"_debugProcess",
"_debugPause",
"_debugEnd",
"hrtime",
"dlopen",
"uptime",
"memoryUsage",
"binding",
"_setupAsyncListener",
"_setupNextTick",
"_setupDomainUse",
"evalScript",
"createWritableStdioStream",
"runInThisContext",
"(code for runInThisContext)",
"NativeModule",
"(code for NativeModule)",
"(code for startup.globalVariables)",
"(code for startup.globalTimeouts)",
"(code for startup.globalConsole)",
"(code for startup.processFatal)",
"(code for startup.processAssert)",
"(code for startup.processConfig)",
"(code for startup.processNextTick)",
"(code for startup.processStdio)",
"(code for startup.processKillAndExit)",
"(code for startup.processSignalHandlers)",
"(code for startup.processChannel)",
"(code for startup.processRawDebug)",
"(code for startup.resolveArgv0)",
"(code for NativeModule.require)",
"(code for NativeModule.getCached)",
"(code for NativeModule.exists)",
"(code for NativeModule.getSource)",
"(code for NativeModule.wrap)",
"(code for NativeModule.compile)",
"(code for NativeModule.cache)",
"_rawDebug",
"runInDebugContext",
"makeContext",
"isContext",
"ContextifyScript",
"system / SignatureInfo",
"runInContext",
"Binding contextify",
"Binding natives",
"Binding v8",
"Binding buffer",
"Binding smalloc",
"Binding fs",
"Binding constants",
"Binding timer_wrap",
"Binding cares_wrap",
"Binding uv",
"Binding pipe_wrap",
"Binding udp_wrap",
"Binding process_wrap",
"(map descriptors)",
"(transition array)",
"$Array",
".value_",
".enumerable_",
".writable_",
"child_process.js",
"NFC",
"NFD",
"NFKC",
"NFKD",
".c",
".g",
"Maximum call stack size exceeded",
"Sun",
"Mon",
"Tue",
"Wed",
"Thu",
"Fri",
"Sat",
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec",
"Sunday",
"Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"January",
"February",
"March",
"April",
"June",
"July",
"August",
"September",
"October",
"November",
"December",
".a",
".h",
".i",
".k",
"exports.exec",
"getConnections",
"exports.fork",
".require",
".getCached",
".exists",
".getSource",
".wrap",
".compile",
".cache",
"configurable_",
"execSync",
"(prototype transitions",
"Unexpected eval or arguments in strict mode",
"Unexpected end of input",
"Start offset is too large:",
"Cannot modify frozen array elements",
"%0",
" is not extensible",
"More than one default clause in switch statement",
"Chaining cycle detected for promise ",
"Function has non-object prototype '",
"' in instanceof check",
"Strict mode function may not have duplicate parameter names",
"Unexpected number",
"Cannot assign to read only '",
"' in strict mode",
"Illegal access to a strict mode caller function.",
"Proxy handler ",
" returned undefined from '",
"%1",
"' trap",
" returned non-configurable descriptor for property '",
"%2",
"' from '",
"Object literal may not have multiple get/set accessors with the same name",
"Object.observe cannot deliver to a frozen function object",
"Cannot convert a Symbol value to a string",
"Module '",
"' used improperly",
" cannot be called on the global proxy object",
" has no '",
"this is not a Date object.",
"Reduce of empty array with no initial value",
"Invalid string length",
"Invalid cached data for function ",
"Octal literals are not allowed in strict mode.",
" returned false from '",
"Property description must be an object: ",
"Invalid property.  A property cannot both have accessors and be writable or have a value, ",
"invalid_argument",
"Invalid typed array length",
"Cannot prevent extension of an object with external array elements",
"Invalid flags supplied to RegExp constructor '",
"'",
"Start offset is negative",
"Start offset is outside the bounds of the buffer",
"Invalid value used in weak set",
"Cannot define property:",
", object is not extensible.",
"Trap '",
"' returned repeated property name '",
"Cannot delete property '",
"' of ",
"Unexpected strict mode reserved word",
"First argument to DataView constructor must be an ArrayBuffer",
"Cannot convert undefined or null to object",
"Too many variables declared (only 4194303 allowed)",
" has non-callable '",
"Object.",
" cannot ",
" non-object",
"Constructor ",
" requires 'new'",
"Cannot convert a Symbol wrapper object to a primitive value",
"Invalid count value",
"Label '",
"' has already been declared",
"Cannot perform non-function",
"Cannot read property '",
"Cannot set property ",
" of ",
" which has only a getter",
"Illegal let declaration in unprotected statement context.",
"Cannot convert object to primitive value",
"Illegal invocation",
"Cannot use 'in' operator to search for '",
"' in ",
"No input to ",
"Unexpected identifier",
"Invalid RegExp pattern /",
"/",
"Too many parameters in function definition (only 65535 allowed)",
"Function arg string contains parenthesis",
"Cannot assign to read only property '",
"Invalid regular expression: /",
"/: ",
"Missing catch or finally after try",
"Uncaught ",
"First argument to ",
" must not be a regular expression",
" has no properties",
"Unexpected token ",
"Illegal access",
"Invalid left-hand side expression in prefix operation",
"Cannot supply flags when constructing one RegExp from another",
"Getter must be a function: ",
"Invalid time value",
"Too many arguments in function call (only 65535 allowed)",
"Identifier '",
"Invalid left-hand side in assignment",
"Invalid left-hand side in for-loop",
"String '",
"' is not valid JSON",
"Converting circular structure to JSON",
"Source is too large",
"Module does not export '",
"', or export is not itself a module",
"Property '",
"' of object ",
" is not a function",
"Invalid non-string changeType",
"Invalid left-hand side expression in postfix operation",
"Illegal const declaration in unprotected statement context.",
"Array.getIndexOf: Argument undefined",
" should be a multiple of ",
"Object.observe accept must be an array of strings.",
"Cannot redefine a property of an object with external array elements",
"Object ",
" has no method '",
"Invalid array buffer length",
" is not a constructor",
"Offset is outside the bounds of the DataView",
"Generator has already finished",
"Expecting a function in instanceof check, but got ",
"Cannot set property '",
"Proxy.",
" called with non-object as handler",
"Promise resolver ",
"Method ",
" called on incompatible receiver ",
"Single function literal required",
"Function.prototype.apply: Arguments list has wrong type",
"Delete of an unqualified identifier in strict mode.",
"Invalid changeRecord with non-string 'type' property",
"Generator is already running",
"builtin %IS_VAR: not a variable",
"Setter must be a function: ",
"Invalid regular expression: missing /",
"Illegal continue statement",
"In strict mode code, functions can only be declared at top level or immediately within another function.",
" called on non-object",
" called with non-function for '",
"Cannot add/remove sealed array elements",
"'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them",
"Invalid cached data",
"Export '",
"' is not defined in module",
"Cannot redefine property: ",
" is not a promise",
"Illegal let declaration outside extended mode",
"notify called on non-notifier object",
" is not defined",
" is not a symbol",
"Illegal newline after throw",
"Duplicate data property in object literal not allowed in strict mode",
"Function.prototype.apply was called on ",
", which is a ",
" and not a function",
"Cyclic __proto__ value",
"Illegal break statement",
"Assignment to constant variable.",
"Unexpected string",
"Can't add property ",
", object is not extensible",
"Illegal return statement",
"this is not a typed array.",
"Strict mode code may not include a with statement",
"Invalid array length",
" called on null or undefined",
"Unexpected reserved word",
"Error loading debugger",
" called with non-object as prototype",
" cannot deliver to non-function",
"Undefined label '",
"Invalid value used as weak map key",
"' returned non-object ",
"Object literal may not have data and accessor property with the same name",
"Object prototype may only be an Object or null: ",
"Invalid data view length",
"Use of const in strict mode.",
"Stack Trace:\n",
"system / JSArrayBufferData",
"globalVariables",
"globalTimeouts",
"globalConsole",
"lazyConstants",
"processFatal",
"processAssert",
"processConfig",
"processNextTick",
"processStdio",
"processKillAndExit",
"processSignalHandlers",
"processChannel",
"processRawDebug",
"resolveArgv0",
"2.3",
"0.11.14",
"3.26.33",
"1.0.0",
"1.2.3",
"14",
"1.0.1i",
"RangeError: ",
"(function (exports, require, module, __filename, __dirname) { ",
"\n});",
"events.js",
"(code for EventEmitter)",
"(code for EventEmitter.init)",
"setMaxListeners",
"emit",
"(code for emit)",
"addListener",
"(code for addListener)",
"once",
"removeListener",
"removeAllListeners",
"listeners",
"util.js",
"inspect",
"stylizeWithColor",
"stylizeNoColor",
"arrayToHash",
"formatValue",
"formatPrimitive",
"formatPrimitiveNoColor",
"formatError",
"formatArray",
"formatProperty",
"reduceToSingleString",
"isBoolean",
"isNull",
"(code for isNull)",
"isNullOrUndefined",
"isNumber",
"(code for isNumber)",
"isString",
"(code for isString)",
"isSymbol",
"isUndefined",
"(code for isUndefined)",
"isRegExp",
"isObject",
"(code for isObject)",
"isDate",
"isError",
"isFunction",
"(code for isFunction)",
"isPrimitive",
"isBuffer",
"(code for isBuffer)",
"objectToString",
"pad",
"(code for exports.deprecate)",
"(code for exports.debuglog)",
"exports.log",
"(code for exports.inherits)",
"deprecated",
"tracing.js",
"emitGC",
"loadContext",
"unloadContext",
"errorHandler",
"AsyncListenerInst",
"createAsyncListener",
"addAsyncListener",
"removeAsyncListener",
"nodeInitialization",
"(code for nodeInitialization)",
"startGarbageCollectionTracking",
"stopGarbageCollectionTracking",
"getHeapStatistics",
"buffer.js",
"createPool",
"(code for createPool)",
"(code for Buffer)",
"SlowBuffer",
"checkOffset",
"checkInt",
"(code for Buffer.isEncoding)",
"(code for Buffer.toString)",
"equals",
"Buffer.write",
"Buffer.slice",
"copyOnto",
"sliceOnto",
"alloc",
"dispose",
"truncate",
"hasExternalData",
"asciiSlice",
"base64Slice",
"binarySlice",
"hexSlice",
"ucs2Slice",
"utf8Slice",
"asciiWrite",
"base64Write",
"binaryWrite",
"hexWrite",
"ucs2Write",
"utf8Write",
"readDoubleBE",
"readDoubleLE",
"readFloatBE",
"readFloatLE",
"writeDoubleBE",
"writeDoubleLE",
"writeFloatBE",
"writeFloatLE",
"copy",
"fill",
"ChildProcess",
"flushStdio",
"getHandleWrapType",
"lookupSignal",
"spawnSync",
"checkExecSyncError",
"execFileSync",
"tickDone",
"scheduleMicrotasks",
"runMicrotasksCallback",
"nextTick",
"runMicrotasks",
"process.exit",
"process.kill",
"isSignal",
"path.js",
"normalizeArray",
"(code for normalizeArray)",
"splitPath",
"normalizeUNCRoot",
"exports.join",
"(code for splitPath)",
"(code for exports.resolve)",
"(code for exports.normalize)",
"(code for exports.isAbsolute)",
"(code for exports.join)",
"(code for exports.relative)",
"(code for exports.dirname)",
"(code for exports.basename)",
"(code for exports.extname)",
"(code for exports._makeLong)",
"nullCheck",
"module.js",
"(code for Module)",
"statPath",
"(code for statPath)",
"readPackage",
"(code for readPackage)",
"tryPackage",
"(code for tryPackage)",
"tryFile",
"(code for tryFile)",
"tryExtensions",
"(code for tryExtensions)",
"stripBOM",
"(code for stripBOM)",
"(code for Module._findPath)",
"(code for Module._nodeModulePaths)",
"(code for Module._resolveLookupPaths)",
"Module._load",
"(code for Module._resolveFilename)",
"Module.load",
"(code for Module.require)",
"(code for Module._initPaths)",
"vm.js",
"(code for exports.runInThisContext)",
"assert.js",
"replacer",
"getMessage",
"fail",
"ok",
"(code for ok)",
"_deepEqual",
"isArguments",
"objEquiv",
"expectedException",
"_throws",
"AssertionError",
"equal",
"notEqual",
"deepEqual",
"notDeepEqual",
"strictEqual",
"notStrictEqual",
"fs.js",
"rethrow",
"maybeCallback",
"makeCallback",
"assertEncoding",
"(code for assertEncoding)",
"(code for nullCheck)",
"stringToFlags",
"(code for stringToFlags)",
"modeNum",
"(code for modeNum)",
"preprocessSymlinkDestination",
"toUnixTimestamp",
"writeAll",
"FSWatcher",
"StatWatcher",
"inStatWatchers",
"allocNewPool",
"ReadStream",
"WriteStream",
"SyncWriteStream",
"(code for fs.Stats)",
"(code for fs.Stats._checkModeProperty)",
"(code for fs.Stats.isDirectory)",
"(code for fs.Stats.isSymbolicLink)",
"fs.exists",
"fs.readFile",
"(code for fs.readFileSync)",
"fs.close",
"(code for fs.closeSync)",
"fs.closeSync",
"fs.open",
"(code for fs.openSync)",
"fs.openSync",
"fs.read",
"(code for fs.readSync)",
"fs.readSync",
"fs.write",
"fs.writeSync",
"fs.rename",
"fs.truncate",
"fs.ftruncate",
"fs.rmdir",
"fs.rmdirSync",
"fs.fdatasync",
"fs.fsync",
"fs.fsyncSync",
"fs.mkdir",
"fs.mkdirSync",
"fs.readdir",
"fs.fstat",
"fs.lstat",
"fs.stat",
"(code for fs.fstatSync)",
"fs.fstatSync",
"(code for fs.lstatSync)",
"fs.lstatSync",
"(code for fs.statSync)",
"fs.statSync",
"fs.readlink",
"(code for fs.readlinkSync)",
"fs.symlink",
"fs.link",
"fs.linkSync",
"fs.unlink",
"fs.fchmod",
"fs.lchmod",
"fs.chmod",
"fs.chmodSync",
"fs.lchown",
"fs.fchown",
"fs.chown",
"fs.chownSync",
"fs.utimes",
"fs.futimes",
"fs.writeFile",
"fs.watch",
"fs.watchFile",
"realpathSync",
"(code for realpathSync)",
"realpath",
"open",
"read",
"fdatasync",
"fsync",
"ftruncate",
"rmdir",
"mkdir",
"readdir",
"stat",
"lstat",
"fstat",
"symlink",
"readlink",
"unlink",
"writeBuffer",
"writeString",
"chmod",
"fchmod",
"chown",
"fchown",
"utimes",
"futimes",
"start",
"stop",
"stream.js",
"Stream",
"Stream.pipe",
"_stream_readable.js",
"ReadableState",
"Readable",
"readableAddChunk",
"needMoreData",
"roundUpToNextPowerOf2",
"howMuchToRead",
"chunkInvalid",
"onEofChunk",
"emitReadable",
"emitReadable_",
"maybeReadMore",
"maybeReadMore_",
"pipeOnDrain",
"resume",
"resume_",
"flow",
"fromList",
"endReadable",
"Readable.on",
"(code for debugs.(anonymous function))",
"_stream_writable.js",
"WriteReq",
"WritableState",
"Writable",
"writeAfterEnd",
"validChunk",
"decodeChunk",
"writeOrBuffer",
"doWrite",
"onwriteError",
"onwriteStateUpdate",
"onwrite",
"afterWrite",
"onwriteDrain",
"clearBuffer",
"needFinish",
"prefinish",
"finishMaybe",
"endWritable",
"Writable.end",
"_stream_duplex.js",
"Duplex",
"onend",
"_stream_transform.js",
"TransformState",
"afterTransform",
"Transform",
"_stream_passthrough.js",
"PassThrough",
"smalloc.js",
"(code for start)",
"normalizeSpawnArguments",
"maybeClose",
"r",
"(code for require)",
"(code for require.resolve)",
"x64",
"darwin",
"v0.11.14",
"_convertCustomFds",
"_validateStdio",
"Timer",
"ref",
"unref",
"setRepeat",
"getRepeat",
"again",
"queryA",
"queryAaaa",
"queryCname",
"queryMx",
"queryNs",
"queryTxt",
"querySrv",
"queryNaptr",
"querySoa",
"getHostByAddr",
"getaddrinfo",
"getnameinfo",
"isIP",
"strerror",
"getServers",
"setServers",
"Pipe",
"setBlocking",
"readStart",
"readStop",
"shutdown",
"writeAsciiString",
"writeUtf8String",
"writeUcs2String",
"writeBinaryString",
"listen",
"connect",
"send",
"bind6",
"send6",
"recvStart",
"recvStop",
"getsockname",
"addMembership",
"dropMembership",
"setMulticastTTL",
"setMulticastLoopback",
"setBroadcast",
"setTTL",
"Process",
"spawn",
"kill",
"setupChannel",
"nop",
"normalizeExecArgs",
"SocketListSend",
"SocketListReceive",
"getSocketList",
"handleMessage",
"createSocket",
".openStdin",
"createPipe",
".addListener",
"._rawDebug",
"handleWrapGetter",
"(code for handleWrapGetter)",
"NativeModule ",
".resolve",
".normalize",
".isAbsolute",
".relative",
".dirname",
".basename",
".extname",
"._makeLong",
"sync",
"mkdirP",
"._findPath",
"._compile",
"..js",
"..json",
".runMain",
"._initPaths",
".requireRepl",
"vm",
"assert",
".throws",
".ifError",
"fs",
".isDirectory",
".isFile",
".isFIFO",
".isSocket",
".existsSync",
".renameSync",
".readdirSync",
".symlinkSync",
".unlinkSync",
".fchmodSync",
".lchmodSync",
".lchownSync",
".fchownSync",
".utimesSync",
".futimesSync",
".appendFile",
".start",
".close",
".stop",
".unwatchFile",
".open",
"._read",
".destroy",
"._write",
".write",
".end",
"stream",
"_stream_readable",
".push",
".unshift",
".isPaused",
".setEncoding",
".read",
".pipe",
".unpipe",
".resume",
".pause",
"debugs",
"_stream_writable",
".cork",
".uncork",
"_stream_duplex",
"_stream_transform",
"._transform",
"_stream_passthrough",
"(code for exports.For.For.compileNode)",
"(code for exports.For.For.pluckDirectCall)",
"(code for exports.Op.Op.isUnary)",
"(code for exports.Op.Op.isChainable)",
"(code for exports.Op.Op.unfoldSoak)",
"(code for exports.Op.Op.compileNode)",
"\\/",
".get",
"^\\#\\!.*",
"(code for exports.Splat.Splat.compileSplattedArray)",
"(code for exports.Param.Param.compileToFragments)",
"(code for exports.Param.Param.asReference)",
"(code for exports.Param.Param.isComplex)",
"(code for exports.Param.Param.eachName)",
".write(string, encoding, offset, length) is deprecated.",
" Use write(string[, offset[, length]][, encoding]) instead.",
"(.*?)(?:[\\/]+|$)",
"^[\\/]*",
"./index",
"./lib/main",
"listenerCount",
"_errnoException",
"%[sdj%]",
"readUInt16LE",
"readUInt16BE",
"readUInt32LE",
"readUInt32BE",
"writeUInt16LE",
"writeUInt16BE",
"writeUInt32LE",
"writeUInt32BE",
"writeInt16LE",
"writeInt16BE",
"writeInt32LE",
"writeInt32BE",
"clearTimeout",
"clearInterval",
"setImmediate",
"clearImmediate",
"process.on",
".process",
"^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$",
"_nodeModulePaths",
"_resolveLookupPaths",
"_resolveFilename",
"._extensions",
"runInNewContext",
"createScript",
"createContext",
"doesNotThrow",
"_checkModeProperty",
"isBlockDevice",
"isCharacterDevice",
"isSymbolicLink",
"readFileSync",
"truncateSync",
"ftruncateSync",
"fdatasyncSync",
"readlinkSync",
"writeFileSync",
"appendFileSync",
"createReadStream",
"createWriteStream",
"smalloc",
"registerExtension",
"/Users",
"cyan",
"yellow",
"grey",
"green",
"magenta",
"red",
"Release",
"/deps/uv/",
"/usr/bin/python",
"static_library",
"events",
"tracing",
"util",
"OPENSSL_NO_SSL2=1",
"__indexOf",
"printLine",
"printWarn",
"hidden",
"exports.run",
"compilePath",
"findDirectoryIndex",
"compileScript",
"compileStdio",
"compileJoin",
"watch",
"watchDir",
"removeSourceDir",
"removeSource",
"silentUnlink",
"(code for outputPath)",
"outputPath",
"writeJs",
"wait",
"timeLog",
"printTokens",
"(code for parseOptions)",
"parseOptions",
"(code for compileOptions)",
"compileOptions",
"forkNode",
"usage",
"exports.ends",
"(code for exports.compact)",
"(code for exports.count)",
"(code for exports.merge)",
"(code for exports.extend)",
"(code for exports.flatten.flatten)",
"(code for exports.del)",
"exports.del",
"(code for exports.last.last)",
"exports.some",
"(code for buildLocationData)",
"buildLocationData",
"(code for exports.addLocationDataFn)",
"(code for exports.baseFileName)",
"(code for exports.isCoffee)",
"(code for exports.isLiterate)",
"syntaxErrorToString",
"OptionParser",
"(code for OptionParser)",
"(code for exports.OptionParser.OptionParser.parse)",
"(code for buildRules)",
"buildRules",
"(code for buildRule)",
"buildRule",
"(code for normalizeArguments)",
"normalizeArguments",
"(code for withPrettyErrors)",
"withPrettyErrors",
"exports.eval",
"(code for exports.register)",
"(code for parser.lexer.lex)",
"(code for parser.lexer.setInput)",
"formatSourcePosition",
"getSourceMap",
"Lexer",
"(code for Lexer)",
"(code for exports.Lexer.Lexer.tokenize)",
"(code for exports.Lexer.Lexer.clean)",
"(code for exports.Lexer.Lexer.identifierToken)",
"(code for exports.Lexer.Lexer.numberToken)",
"(code for exports.Lexer.Lexer.stringToken)",
"(code for exports.Lexer.Lexer.heredocToken)",
"(code for exports.Lexer.Lexer.commentToken)",
"(code for exports.Lexer.Lexer.jsToken)",
"(code for exports.Lexer.Lexer.regexToken)",
"(code for exports.Lexer.Lexer.lineToken)",
"(code for exports.Lexer.Lexer.outdentToken)",
"(code for exports.Lexer.Lexer.whitespaceToken)",
"(code for exports.Lexer.Lexer.newlineToken)",
"(code for exports.Lexer.Lexer.literalToken)",
"(code for exports.Lexer.Lexer.tagParameters)",
"(code for exports.Lexer.Lexer.closeIndentation)",
"(code for exports.Lexer.Lexer.balancedString)",
"(code for exports.Lexer.Lexer.pair)",
"(code for exports.Lexer.Lexer.getLineAndColumnFromChunk)",
"(code for exports.Lexer.Lexer.makeToken)",
"(code for exports.Lexer.Lexer.token)",
"(code for exports.Lexer.Lexer.tag)",
"(code for exports.Lexer.Lexer.value)",
"(code for exports.Lexer.Lexer.unfinished)",
"(code for exports.Lexer.Lexer.removeNewlines)",
"(code for exports.Lexer.Lexer.escapeLines)",
"(code for generate)",
"generate",
"Rewriter",
"(code for Rewriter)",
"(code for exports.Rewriter.Rewriter.rewrite)",
"(code for exports.Rewriter.Rewriter.scanTokens)",
"(code for exports.Rewriter.Rewriter.detectEnd)",
"(code for exports.Rewriter.Rewriter.removeLeadingNewlines)",
"(code for exports.Rewriter.Rewriter.closeOpenCalls)",
"(code for exports.Rewriter.Rewriter.closeOpenIndexes)",
"(code for exports.Rewriter.Rewriter.matchTags)",
"(code for exports.Rewriter.Rewriter.addImplicitBracesAndParens)",
"(code for exports.Rewriter.Rewriter.addLocationDataToGeneratedTokens)",
"(code for exports.Rewriter.Rewriter.normalizeLines)",
"(code for exports.Rewriter.Rewriter.tagPostfixConditionals)",
"(code for exports.Rewriter.Rewriter.tag)",
"Parser",
"(code for Parser)",
":",
".init",
".format",
".deprecate",
".debuglog",
".inherits",
"._extend",
".isEncoding",
".concat",
".byteLength",
".toString",
".toJSON",
".readUInt8",
".readInt8",
".readInt16LE",
".readInt16BE",
".readInt32LE",
".readInt32BE",
".writeUInt8",
".writeInt8",
".setTimeout",
".setInterval",
".assert",
"\"",
"CodeFragment",
"Base",
"Block",
"Literal",
"Undefined",
"Null",
"Bool",
"Return",
"Value",
"Comment",
"Call",
"Extends",
"Access",
"Index",
"Range",
"Slice",
"Obj",
"Arr",
"Class",
"Assign",
"Code",
"Param",
"Splat",
"Expansion",
"While",
"Op",
"In",
"Try",
"Throw",
"Existence",
"Parens",
"For",
"Switch",
"If",
"\n",
"sourceLocation",
"encodeBase64",
"LineMap",
"SourceMap",
".coffee",
".litcoffee",
".coffee.md",
"exports.Base",
".Base",
"compileToFragments",
"compileClosure",
"cacheToCodeFragments",
"lastNonComment",
"traverseChildren",
"updateLocationDataIfMissing",
"wrapInBraces",
"joinFragmentArrays",
".Block",
"compileWithDeclarations",
".Literal",
"isAssignable",
".Undefined",
"exports.Null",
".Null",
"exports.Bool",
".Bool",
".Return",
".Value",
"hasProperties",
"isSimpleNumber",
"isNotCallable",
"cacheReference",
".Comment",
"exports.Call",
".Call",
"superReference",
"compileSplat",
".Extends",
".Access",
".Index",
".Range",
"compileVariables",
"compileArray",
".Slice",
"exports.Obj",
".Obj",
"exports.Arr",
".Arr",
".Class",
"determineName",
"addBoundFunctions",
"addProperties",
"hoistDirectivePrologue",
"ensureConstructor",
".Assign",
"compilePatternMatch",
"compileConditional",
"compileSpecialMath",
"compileSplice",
"exports.Code",
".Code",
"eachParamName",
".Param",
".Splat",
"compileSplattedArray",
".Expansion",
".While",
"exports.Op",
".Op",
"compileChain",
"compileExistence",
"compileUnary",
"compilePower",
"compileFloorDivision",
"compileModulo",
"exports.In",
".In",
"compileOrTest",
"compileLoopTest",
"exports.Try",
".Try",
".Throw",
".Existence",
".Parens",
"exports.For",
".For",
"pluckDirectCall",
".Switch",
"exports.If",
".If",
"elseBodyNode",
"compileStatement",
"compileExpression",
"Scope",
".Scope",
"freeVariable",
"hasDeclarations",
"declaredVariables",
"assignedVariables",
"(code for Scope)",
"(code for CodeFragment)",
"ctor",
"(code for Block)",
"(code for Literal)",
"(code for Return)",
"(code for Value)",
"(code for Call)",
"(code for Access)",
"(code for Range)",
"(code for Obj)",
"(code for Arr)",
"(code for Assign)",
"(code for Code)",
"(code for Param)",
"(code for Op)",
"(code for For)",
"^[+-]?0x[\\da-f]+",
"^[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*$",
"^\\/",
"^['\"]",
"(code for NO)",
"^[+-]?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)$",
"^[+-]?\\d+$",
"(code for THIS)",
"(code for YES)",
"(code for fragmentsToText)",
"(code for parseNum)",
"(code for unfoldSoak)",
"!==",
"in",
"condition",
"guard",
"body",
"handleConversion",
".net.Native",
".net.Server",
".net.Socket",
"dgram.Native",
"dgram.Socket",
"expressions",
"expression",
"base",
"properties",
"variable",
"child",
"parent",
"from",
"to",
"range",
"objects",
"params",
"first",
"second",
"array",
"attempt",
"recovery",
"ensure",
"step",
"cases",
"otherwise",
"elseBody",
"string_decoder",
"StringDecoder",
"detectIncompleteChar",
"passThroughWrite",
"utf16DetectIncompleteChar",
"base64DetectIncompleteChar",
"net",
"net.js",
"normalizeConnectArgs",
"Socket",
"Server",
"createServer",
".connect",
".exports",
"createConnection",
".listen",
"._onTimeout",
".setNoDelay",
"setKeepAlive",
".address",
".destroySoon",
"._destroy",
"_getpeername",
"_getsockname",
"_writeGeneric",
"._writev",
"_createServerHandle",
"._listen2",
"_emitCloseIfDrained",
"._setupSlave",
".isIPv4",
".isIPv6",
"_setSimultaneousAccepts",
"noop",
"createTCP",
"createHandle",
"isPipeName",
"initSocketHandle",
"onSocketFinish",
"afterShutdown",
"onSocketEnd",
"writeAfterFIN",
"maybeDestroy",
"createWriteReq",
"afterConnect",
"toNumber",
"_listen",
"timers",
"timers.js",
".unenroll",
".enroll",
".active",
"Timeout",
".unref",
"_unrefActive",
"insert",
"listOnTimeout",
"processImmediate",
"Immediate",
"unrefTimeout",
"kOnTimeout",
"_linklist",
"_linklist.js",
"init",
"peek",
"remove",
"append",
"isEmpty",
"(code for init)",
"dgram",
"dgram.js",
"_createSocketHandle",
".sendto",
".setTTL",
"_healthCheck",
"_stopReceiving",
"lookup",
"lookup4",
"lookup6",
"newHandle",
"startListening",
"replaceHandle",
"afterSend",
"onMessage",
"constants",
"constants.js",
"-b",
"--bare",
"compile without a top-level function wrapper",
"-c",
"--compile",
"compile to JavaScript and save as .js files",
"-e",
"--eval",
"pass a string from the command line as input",
"-h",
"--help",
"display this help message",
"-i",
"--interactive",
"run an interactive CoffeeScript REPL",
"-j",
"--join [FILE]",
"concatenate the source CoffeeScript before compiling",
"-m",
"--map",
"generate source map and save as .js.map files",
"-n",
"--nodes",
"print out the parse tree that the parser produces",
"--nodejs [ARGS]",
"pass options directly to the \"node\" binary",
"--no-header",
"suppress the \"Generated by\" header",
"-o",
"--output [DIR]",
"set the output directory for compiled JavaScript",
"-p",
"--print",
"print out the compiled JavaScript",
"-s",
"--stdio",
"listen for and compile scripts over stdio",
"-l",
"--literate",
"treat stdio as literate style coffee-script",
"-t",
"--tokens",
"print out the tokens that the lexer/rewriter produce",
"-v",
"--version",
"display the version number",
"-w",
"--watch",
"watch scripts for changes and rerun commands",
"Usage: coffee [options] path/to/script.coffee -- [args]\n\nIf called without options, `coffee` will run your script.",
"bare",
"help",
"interactive",
"--join",
"nodes",
"nodejs",
"--nodejs",
"no-header",
"--output",
"print",
"literate",
"tokens",
"./app.coffee",
"coffee",
"\\.(litcoffee|coffee\\.md)$",
"app.coffee",
"app.js",
"child_process",
".fork",
"(code for findExtension)",
"\\.((lit)?coffee|coffee\\.md)$",
"\\r",
"IDENTIFIER",
"heapdump",
"=",
"^\\s*\\n\\s*",
"([^\\\\]|\\\\\\\\)\\s*\\n\\s*$",
"\\\\[^\\S\\n]*(\\n|\\\\)\\s*",
"\\s*\\n\\s*",
"STRING",
"'heapdump'",
"^(?:\\\\.|[^\\\\])*\\\\(?:0[0-7]|[1-7])",
"TERMINATOR",
"getRandomInt",
"PARAM_START",
"(",
"PARAM_END",
")",
"->",
"INDENT",
"RETURN",
"return",
"CALL_START",
"CALL_END",
"MATH",
"*",
"OUTDENT",
"root",
"[",
"]",
"FOR",
"i",
"FORIN",
"^0[BOX]",
"E",
"^0\\d*[89]",
"^0\\d+",
"^0o([0-7]+)",
"^0b([01]+)",
"NUMBER",
"..",
"100",
"arr",
"arrSize",
"\"hello\"",
"anotherRoot",
"{",
"\"foobar\"",
"}",
"foo",
"\"bar\"",
"baz",
"7",
"  ",
"    ",
"      ",
"var",
"\\d",
"_i",
"_j",
"writeSnapshot",
"\\s*,\\s*",
"(code for getRandomInt)",
"hello",
"foobar",
"bar",
"trace",
"anonymous",
"(code for anonymous)",
"parseError",
"commonjsMain",
"1.8.0",
".add",
".generate",
".encodeVlq",
"STATEMENT",
"JS",
"REGEX",
"DEBUGGER",
"UNDEFINED",
"NULL",
"BOOL",
"HERECOMMENT",
"=>",
",",
"...",
"?.",
"::",
"?::",
"INDEX_START",
"INDEX_END",
"INDEX_SOAK",
"CLASS",
"EXTENDS",
"SUPER",
"FUNC_EXIST",
"THIS",
"@",
"TRY",
"FINALLY",
"CATCH",
"THROW",
"WHILE",
"WHEN",
"UNTIL",
"LOOP",
"OWN",
"FOROF",
"BY",
"SWITCH",
"ELSE",
"LEADING_WHEN",
"IF",
"POST_IF",
"UNARY",
"UNARY_MATH",
"-",
"+",
"--",
"++",
"?",
"**",
"SHIFT",
"LOGIC",
"RELATION",
"COMPOUND_ASSIGN",
"^index\\.\\w+?$",
".starts",
".repeat",
".compact",
".count",
".merge",
".extend",
".flatten",
"exports.last",
".last",
".isCoffee",
".isLiterate",
".parse",
".help",
".register",
"_base",
"parser.lexer",
".lex",
".setInput",
"parser.yy",
".parseError",
".tokenize",
".clean",
".numberToken",
".stringToken",
".jsToken",
".regexToken",
".lineToken",
".pair",
".makeToken",
".token",
".tag",
".value",
".unfinished",
".escapeLines",
".makeString",
".error",
".rewrite",
".scanTokens",
".detectEnd",
".matchTags",
".indentation",
"THEN",
"NEW",
"new",
"typeof",
"instanceof",
"break",
"continue",
"debugger",
"if",
"else",
"switch",
"while",
"do",
"try",
"finally",
"class",
"extends",
"super",
"unless",
"until",
"loop",
"of",
"by",
"when",
"&&",
"||",
"!=",
"!",
"case",
"default",
"void",
"with",
"const",
"let",
"enum",
"export",
"import",
"__hasProp",
"__extends",
"__slice",
"__bind",
"implements",
"interface",
"package",
"private",
"protected",
"public",
"static",
"yield",
"-=",
"+=",
"/=",
"*=",
"%=",
"||=",
"&&=",
"?=",
"<<=",
">>=",
">>>=",
"&=",
"^=",
"|=",
"**=",
"//=",
"%%=",
"TYPEOF",
"DO",
"~",
"&",
"|",
"^",
"<<",
">>",
">>>",
"<",
">",
"<=",
">=",
"%",
"//",
"%%",
"OF",
"INSTANCEOF",
"TRUE",
"FALSE",
"invertLiterate",
"addLocationDataFn",
"locationDataToString",
"baseFileName",
"throwSyntaxError",
"updateSyntaxError",
"nameWhitespaceCharacter",
"^(--\\w[\\w\\-]*)",
"^-(\\w{2,})",
"\\[(\\w+(\\*?))\\]",
"^(-\\w)$",
"_compileFile",
"upcomingInput",
"prepareStackTrace",
".Lexer",
"identifierToken",
"heredocToken",
"commentToken",
"heregexToken",
"outdentToken",
"whitespaceToken",
"newlineToken",
"suppressNewlines",
"literalToken",
"sanitizeHeredoc",
"tagParameters",
"closeIndentation",
"balancedString",
"interpolateString",
"getLineAndColumnFromChunk",
"removeNewlines",
".Rewriter",
"removeLeadingNewlines",
"closeOpenCalls",
"closeOpenIndexes",
"looksObjectish",
"findTagsBackwards",
"addImplicitBracesAndParens",
"addLocationDataToGeneratedTokens",
"normalizeLines",
"tagPostfixConditionals",
"^[-=]>",
"and",
"or",
"isnt",
"not",
"yes",
"no",
"on",
"off",
"^###([^#][\\s\\S]*?)(?:###[^\\n\\S]*|###$)|^(?:\\s*#(?!##[^#]).*)+",
"^(\"\"\"|''')((?:\\\\[\\s\\S]|[^\\\\])*?)(?:\\n[^\\n\\S]*)?\\1",
"\\*\\/",
"\\n+([^\\n\\S]*)",
"^\\/{3}((?:\\\\?[\\s\\S])+?)\\/{3}([imgy]{0,4})(?!\\w)",
"((?:\\\\\\\\)+)|\\\\(\\s|\\/)|\\s+(?:#.*)?",
"^([$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)([^\\n\\S]*:(?!:))?",
"^`[^\\\\`]*(?:\\\\.[^\\\\`]*)*`",
"^\\s*(?:,|\\??\\.(?![.\\d])|::)",
"\\n",
"^(?:\\n[^\\n\\S]*)+",
"^0b[01]+|^0o[0-7]+|^0x[\\da-f]+|^\\d*\\.?\\d+(?:e[+-]?\\d+)?",
"^(?:[-=]>|[-+*\\/%<>&|^!?=]=|>>>=?|([-+:])\\1|([&|<>*\\/%])\\2=?|\\?(\\.|::)|\\.{2,3})",
"^(\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)([imgy]{0,4})(?!\\w)",
"^'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'",
"\\s+$",
"^[^\\n\\S]+",
"LineMap.add",
"(code for __extends)",
"YES",
"NO",
"NEGATE",
"fragmentsToText",
"(code for exports.Base.Base.compile)",
"(code for exports.Base.Base.compileToFragments)",
"(code for exports.Base.Base.cache)",
"(code for exports.Base.Base.cacheToCodeFragments)",
"(code for exports.Base.Base.makeReturn)",
"(code for exports.Base.Base.lastNonComment)",
"(code for exports.Base.Base.toString)",
"(code for exports.Base.Base.eachChild)",
"(code for exports.Base.Base.unwrapAll)",
"(code for exports.Base.Base.updateLocationDataIfMissing)",
"(code for exports.Base.Base.makeCode)",
"(code for exports.Base.Base.joinFragmentArrays)",
"(code for exports.Block.Block.push)",
"(code for exports.Block.Block.isEmpty)",
"(code for exports.Block.Block.makeReturn)",
"(code for exports.Block.Block.compileToFragments)",
"(code for exports.Block.Block.compileNode)",
"(code for exports.Block.Block.compileRoot)",
"(code for exports.Block.Block.compileWithDeclarations)",
"(code for exports.Block.Block.wrap)",
"(code for exports.Literal.Literal.isAssignable)",
"(code for exports.Literal.Literal.isStatement)",
"(code for exports.Literal.Literal.compileNode)",
"(code for exports.Literal.Literal.toString)",
"(code for exports.Return.Return.compileToFragments)",
"(code for exports.Return.Return.compileNode)",
"(code for exports.Value.Value.add)",
"(code for exports.Value.Value.hasProperties)",
"(code for exports.Value.Value.bareLiteral)",
"(code for exports.Value.Value.isArray)",
"(code for exports.Value.Value.isRange)",
"(code for exports.Value.Value.isComplex)",
"(code for exports.Value.Value.isAssignable)",
"(code for exports.Value.Value.isSimpleNumber)",
"(code for exports.Value.Value.isString)",
"(code for exports.Value.Value.isRegex)",
"(code for exports.Value.Value.isNotCallable)",
"(code for exports.Value.Value.isStatement)",
"(code for exports.Value.Value.isObject)",
"(code for exports.Value.Value.isSplice)",
"(code for exports.Value.Value.unwrap)",
"(code for exports.Value.Value.compileNode)",
"(code for exports.Value.Value.unfoldSoak)",
"(code for exports.Call.Call.unfoldSoak)",
"(code for exports.Call.Call.compileNode)",
"(code for exports.Access.Access.compileToFragments)",
"(code for exports.Range.Range.compileVariables)",
"(code for exports.Range.Range.compileNode)",
"(code for exports.Obj.Obj.compileNode)",
"(code for exports.Arr.Arr.compileNode)",
"(code for exports.Assign.Assign.isStatement)",
"(code for exports.Assign.Assign.unfoldSoak)",
"(code for exports.Assign.Assign.compileNode)",
"(code for exports.Code.Code.isStatement)",
"(code for exports.Code.Code.makeScope)",
"(code for exports.Code.Code.compileNode)",
"(code for exports.Code.Code.eachParamName)",
"utility",
"multident",
"parseNum",
"isLiteralArguments",
"isLiteralThis",
"unfoldSoak",
"(code for exports.Scope.Scope.add)",
"(code for exports.Scope.Scope.find)",
"(code for exports.Scope.Scope.parameter)",
"(code for exports.Scope.Scope.check)",
"(code for exports.Scope.Scope.temporary)",
"(code for exports.Scope.Scope.type)",
"(code for exports.Scope.Scope.freeVariable)",
"(code for exports.Scope.Scope.hasDeclarations)",
"(code for exports.Scope.Scope.declaredVariables)",
"(code for ctor)",
".makeReturn",
".contains",
".eachChild",
".invert",
".unwrapAll",
".makeCode",
".pop",
".unwrap",
".isEmpty",
".isStatement",
".jumps",
".compileNode",
".compileRoot",
".assigns",
".bareLiteral",
".isArray",
".isRange",
".isComplex",
".isString",
".isRegex",
".isAtomic",
".isObject",
".isSplice",
".looksStatic",
".unfoldSoak",
".newInstance",
".superThis",
".setContext",
".walkBody",
".makeScope",
".asReference",
".eachName",
".addBody",
".isUnary",
".isChainable",
".generateDo",
".bodyNode",
".addElse",
".ensureBlock",
"UTILITIES",
".extends",
".bind",
".indexOf",
".modulo",
".hasProp",
".slice",
".namedMethod",
".find",
".parameter",
".check",
".temporary",
".type",
".assign",
".send",
".got",
".postSend",
"._request",
"._forkChild",
".execFile",
".spawn",
".kill",
".ref",
"string_decoder.js",
"Socket.read",
"Socket._read",
"Socket.end",
"Socket.write",
"Socket.ref",
"Socket.unref",
"Server.close",
"Server.ref",
"Server.unref",
"Timeout.ref",
"Socket.bind",
"Socket.send",
"Socket.close",
"(code for trim)",
"loadFile",
"findExtension",
"RegExp.prototype.exec",
"(code for condition)",
"(code for action)",
"action",
"(code for stackTop)",
"stackTop",
"(code for forward)",
"forward",
"(code for inImplicit)",
"inImplicit",
"(code for inImplicitCall)",
"inImplicitCall",
"(code for inImplicitObject)",
"inImplicitObject",
"inImplicitControl",
"(code for startImplicitCall)",
"startImplicitCall",
"(code for endImplicitCall)",
"endImplicitCall",
"startImplicitObject",
"endImplicitObject",
"popStack",
"lex",
"(code for lex)",
"atParam",
"(code for a)",
"a",
"InsertionSort",
"(code for InsertionSort)",
"QuickSort",
"(code for QuickSort)",
"CopyFromPrototype",
"U",
"SafeRemoveArrayHoles",
"(code relocation info)",
"GetProperty",
"KeyedGetProperty",
"DeleteProperty",
"HasLocalProperty",
"HasProperty",
"HasElement",
"IsPropertyEnumerable",
"GetPropertyNames",
"GetPropertyNamesFast",
"GetLocalPropertyNames",
"GetLocalElementNames",
"GetInterceptorInfo",
"GetNamedInterceptorPropertyNames",
"GetIndexedInterceptorElementNames",
"GetArgumentsProperty",
"ToFastProperties",
"FinishArrayPrototypeSetup",
"SpecialArrayFunctions",
"IsSloppyModeFunction",
"GetDefaultReceiver",
"GetPrototype",
"SetPrototype",
"IsInPrototypeChain",
"IsExtensible",
"PreventExtensions",
"CheckIsBootstrapping",
"GetRootNaN",
"Apply",
"GetFunctionDelegate",
"GetConstructorDelegate",
"DeoptimizeFunction",
"ClearFunctionTypeFeedback",
"RunningInSimulator",
"IsConcurrentRecompilationSupported",
"OptimizeFunctionOnNextCall",
"NeverOptimizeFunction",
"GetOptimizationStatus",
"GetOptimizationCount",
"UnblockConcurrentRecompilation",
"CompileForOnStackReplacement",
"SetAllocationTimeout",
"SetNativeFlag",
"SetInlineBuiltinFlag",
"StoreArrayLiteralElement",
"DebugPrepareStepInIfStepping",
"DebugPromiseHandlePrologue",
"DebugPromiseHandleEpilogue",
"FlattenString",
"LoadMutableDouble",
"TryMigrateInstance",
"NotifyContextDisposed",
"PushIfAbsent",
"ToBool",
"Typeof",
"StringToNumber",
"StringParseInt",
"StringParseFloat",
"StringToLowerCase",
"StringToUpperCase",
"StringSplit",
"CharFromCode",
"URIEscape",
"URIUnescape",
"NumberToInteger",
"NumberToIntegerMapMinusZero",
"NumberToJSUint32",
"NumberToJSInt32",
"NumberAdd",
"NumberSub",
"NumberMul",
"NumberDiv",
"NumberMod",
"NumberUnaryMinus",
"NumberImul",
"StringBuilderConcat",
"StringBuilderJoin",
"NumberOr",
"NumberAnd",
"NumberXor",
"NumberShl",
"NumberShr",
"NumberSar",
"NumberEquals",
"StringEquals",
"NumberCompare",
"SmiLexicographicCompare",
"MathAcos",
"MathAsin",
"MathAtan",
"MathFloor",
"MathAtan2",
"MathExp",
"RoundNumber",
"MathFround",
"RegExpCompile",
"RegExpExecMultiple",
"RegExpInitializeObject",
"ParseJson",
"BasicJSONStringify",
"QuoteJSONString",
"StringIndexOf",
"StringLastIndexOf",
"StringLocaleCompare",
"StringReplaceGlobalRegExpWithString",
"StringReplaceOneCharWithString",
"StringMatch",
"StringTrim",
"StringToArray",
"NewStringWrapper",
"NewString",
"TruncateString",
"NumberToRadixString",
"NumberToFixed",
"NumberToExponential",
"NumberToPrecision",
"IsValidSmi",
"FunctionSetInstanceClassName",
"FunctionSetLength",
"FunctionSetPrototype",
"FunctionSetReadOnlyPrototype",
"FunctionGetName",
"FunctionSetName",
"FunctionNameShouldPrintAsAnonymous",
"FunctionMarkNameShouldPrintAsAnonymous",
"FunctionIsGenerator",
"FunctionBindArguments",
"BoundFunctionGetBindings",
"FunctionRemovePrototype",
"FunctionGetSourceCode",
"FunctionGetScript",
"FunctionGetScriptSourcePosition",
"FunctionGetPositionForOffset",
"FunctionIsAPIFunction",
"FunctionIsBuiltin",
"GetScript",
"CollectStackTrace",
"GetAndClearOverflowedStackTrace",
"GetV8Version",
"SetCode",
"SetExpectedNumberOfProperties",
"CreateApiFunction",
"IsTemplate",
"GetTemplateField",
"DisableAccessChecks",
"EnableAccessChecks",
"SetAccessorProperty",
"DateCurrentTime",
"DateParseString",
"DateLocalTimezone",
"DateToUTC",
"DateMakeDay",
"DateSetValue",
"DateCacheVersion",
"CompileString",
"GlobalReceiver",
"IsAttachedGlobal",
"SetProperty",
"DefineOrRedefineDataProperty",
"DefineOrRedefineAccessorProperty",
"IgnoreAttributesAndSetProperty",
"GetDataProperty",
"SetHiddenProperty",
"RemoveArrayHoles",
"GetArrayKeys",
"MoveArrayContents",
"EstimateNumberOfElements",
"LookupAccessor",
"ObjectFreeze",
"GetMicrotaskState",
"IsJSModule",
"CreateSymbol",
"CreatePrivateSymbol",
"CreateGlobalPrivateSymbol",
"NewSymbolWrapper",
"SymbolDescription",
"SymbolRegistry",
"SymbolIsPrivate",
"CreateJSProxy",
"CreateJSFunctionProxy",
"IsJSProxy",
"IsJSFunctionProxy",
"GetHandler",
"GetCallTrap",
"GetConstructTrap",
"Fix",
"SetInitialize",
"SetAdd",
"SetHas",
"SetDelete",
"SetClear",
"SetGetSize",
"SetCreateIterator",
"SetIteratorNext",
"SetIteratorClose",
"MapInitialize",
"MapGet",
"MapHas",
"MapDelete",
"MapClear",
"MapSet",
"MapGetSize",
"MapCreateIterator",
"MapIteratorNext",
"MapIteratorClose",
"WeakCollectionInitialize",
"WeakCollectionGet",
"WeakCollectionHas",
"WeakCollectionDelete",
"WeakCollectionSet",
"SetMicrotaskPending",
"IsObserved",
"SetIsObserved",
"ObservationWeakMapCreate",
"ObserverObjectAndRecordHaveSameOrigin",
"ObjectWasCreatedInCurrentOrigin",
"ObjectObserveInObjectContext",
"ObjectGetNotifierInObjectContext",
"ObjectNotifierPerformChangeInObjectContext",
"ArrayBufferInitialize",
"ArrayBufferSliceImpl",
"ArrayBufferIsView",
"ArrayBufferNeuter",
"TypedArrayInitializeFromArrayLike",
"TypedArrayGetBuffer",
"TypedArraySetFastCases",
"DataViewGetBuffer",
"DataViewGetInt8",
"DataViewGetUint8",
"DataViewGetInt16",
"DataViewGetUint16",
"DataViewGetInt32",
"DataViewGetUint32",
"DataViewGetFloat32",
"DataViewGetFloat64",
"DataViewSetInt8",
"DataViewSetUint8",
"DataViewSetInt16",
"DataViewSetUint16",
"DataViewSetInt32",
"DataViewSetUint32",
"DataViewSetFloat32",
"DataViewSetFloat64",
"NewObjectFromBound",
"OptimizeObjectForAddingMultipleProperties",
"DebugPrint",
"GlobalPrint",
"DebugTrace",
"TraceEnter",
"TraceExit",
"Abort",
"AbortJS",
"LocalKeys",
"MessageGetStartPosition",
"MessageGetScript",
"IS_VAR",
"HasFastSmiElements",
"HasFastSmiOrObjectElements",
"HasFastObjectElements",
"HasFastDoubleElements",
"HasFastHoleyElements",
"HasDictionaryElements",
"HasSloppyArgumentsElements",
"HasExternalUint8ClampedElements",
"HasExternalArrayElements",
"HasExternalInt8Elements",
"HasExternalUint8Elements",
"HasExternalInt16Elements",
"HasExternalUint16Elements",
"HasExternalInt32Elements",
"HasExternalUint32Elements",
"HasExternalFloat32Elements",
"HasExternalFloat64Elements",
"HasFixedUint8ClampedElements",
"HasFixedInt8Elements",
"HasFixedUint8Elements",
"HasFixedInt16Elements",
"HasFixedUint16Elements",
"HasFixedInt32Elements",
"HasFixedUint32Elements",
"HasFixedFloat32Elements",
"HasFixedFloat64Elements",
"HasFastProperties",
"TransitionElementsKind",
"HaveSameMap",
"IsJSGlobalProxy",
"DebugBreak",
"SetDebugEventListener",
"Break",
"DebugGetPropertyDetails",
"DebugGetProperty",
"DebugPropertyTypeFromDetails",
"DebugPropertyAttributesFromDetails",
"DebugPropertyIndexFromDetails",
"DebugNamedInterceptorPropertyValue",
"DebugIndexedInterceptorElementValue",
"CheckExecutionState",
"GetFrameCount",
"GetFrameDetails",
"GetScopeCount",
"GetStepInPositions",
"GetScopeDetails",
"GetAllScopesDetails",
"GetFunctionScopeCount",
"GetFunctionScopeDetails",
"SetScopeVariableValue",
"DebugPrintScopes",
"GetThreadCount",
"GetThreadDetails",
"SetDisableBreak",
"GetBreakLocations",
"SetFunctionBreakPoint",
"SetScriptBreakPoint",
"ClearBreakPoint",
"ChangeBreakOnException",
"IsBreakOnException",
"PrepareStep",
"ClearStepping",
"DebugEvaluate",
"DebugEvaluateGlobal",
"DebugGetLoadedScripts",
"DebugReferencedBy",
"DebugConstructedBy",
"DebugGetPrototype",
"DebugSetScriptSource",
"SystemBreak",
"DebugDisassembleFunction",
"DebugDisassembleConstructor",
"FunctionGetInferredName",
"LiveEditFindSharedFunctionInfosForScript",
"LiveEditGatherCompileInfo",
"LiveEditReplaceScript",
"LiveEditReplaceFunctionCode",
"LiveEditFunctionSourceUpdated",
"LiveEditFunctionSetScript",
"LiveEditReplaceRefToNestedFunction",
"LiveEditPatchFunctionPositions",
"LiveEditCheckAndDropActivations",
"LiveEditCompareStrings",
"LiveEditRestartFrame",
"GetFunctionCodePositionFromSource",
"ExecuteInDebugContext",
"SetFlags",
"CollectGarbage",
"GetHeapUsage",
"_IsSmi",
"_IsNonNegativeSmi",
"_IsArray",
"_IsRegExp",
"_IsConstructCall",
"_CallFunction",
"_ArgumentsLength",
"_Arguments",
"_ValueOf",
"_SetValueOf",
"_DateField",
"_StringCharFromCode",
"_StringCharAt",
"_OneByteSeqStringSetChar",
"_TwoByteSeqStringSetChar",
"_ObjectEquals",
"_IsObject",
"_IsFunction",
"_IsUndetectableObject",
"_IsSpecObject",
"_IsStringWrapperSafeForDefaultValueOf",
"_MathPow",
"_IsMinusZero",
"_HasCachedArrayIndex",
"_GetCachedArrayIndex",
"_FastAsciiArrayJoin",
"_GeneratorNext",
"_GeneratorThrow",
"_DebugBreakInOptimizedCode",
"_ClassOf",
"_StringCharCodeAt",
"_StringAdd",
"_SubString",
"_StringCompare",
"_RegExpExec",
"_RegExpConstructResult",
"_GetFromCache",
"_NumberToString",
"_TypedArrayInitialize",
"_DataViewInitialize",
"_MaxSmi",
"_TypedArrayMaxSizeInHeap",
"_ArrayBufferViewGetByteLength",
"_ArrayBufferViewGetByteOffset",
"_TypedArrayGetLength",
"_ArrayBufferGetByteLength",
"_ConstructDouble",
"_DoubleHi",
"_DoubleLo",
"_MathSqrt",
"_MathLog",
"_DebugCallbackSupportsStepping",
"$Object",
"$String",
"$Number",
"$Function",
"$Boolean",
"$NaN",
"b",
"c",
"e",
"g",
"invalid_in_operator_use",
"instanceof_function_expected",
"instanceof_nonobject_proto",
"called_non_callable",
"stack_overflow",
"apply_non_function",
"apply_wrong_args",
"symbol_to_primitive",
"symbol_to_string",
"undefined_or_null_to_object",
"cannot_convert_to_primitive",
"$isNaN",
"GlobalIsNaN",
"$isFinite",
"GlobalIsFinite",
"GlobalParseInt",
"GlobalParseFloat",
"$EvalError",
"ObjectToString",
"ObjectToLocaleString",
"called_on_null_or_undefined",
"ObjectValueOf",
"ObjectHasOwnProperty",
"hasOwn",
"DerivedHasOwnTrap",
"ObjectIsPrototypeOf",
"ObjectPropertyIsEnumerable",
"isEnumerable",
"ObjectDefineGetter",
"$TypeError",
"Object.prototype.__defineGetter__: Expecting function",
"setGet",
"setEnumerable",
"setConfigurable",
"ObjectLookupGetter",
"ObjectDefineSetter",
"setSet",
"ObjectLookupSetter",
"ObjectKeys",
"called_on_non_object",
"Object.keys",
"DerivedKeysTrap",
"hasGetter",
"hasSetter",
"hasValue",
"hasWritable",
"getValue",
"isWritable",
"enumerable",
"configurable",
"isConfigurable",
"getGet",
"getSet",
"hasEnumerable",
"hasConfigurable",
"property_desc_object",
"setValue",
"setWritable",
"getter_must_be_callable",
"setter_must_be_callable",
"value_and_accessor",
"value_",
"hasValue_",
"writable_",
"hasWritable_",
"enumerable_",
"hasEnumerable_",
"hasConfigurable_",
"get_",
"hasGetter_",
"set_",
"hasSetter_",
"Internal error: invalid desc_array",
"handler_trap_missing",
"handler_trap_must_be_callable",
"proxy_prop_not_configurable",
"define_disallowed",
"handler_returned_false",
"redefine_disallowed",
"k",
"l",
"$RangeError",
"m",
"o",
"ObjectGetPrototypeOf",
"Object.getPrototypeOf",
"ObjectSetPrototypeOf",
"proto_object_or_null",
"ObjectGetOwnPropertyDescriptor",
"proxy_non_object_prop_names",
"proxy_repeated_prop_name",
"ObjectGetOwnPropertyNames",
"ObjectCreate",
"ObjectDefineProperties",
"ObjectDefineProperty",
"Object.defineProperty",
"Object.defineProperties",
"handler_returned_undefined",
"ObjectSeal",
"ObjectPreventExtension",
"ObjectIsSealed",
"ObjectIsFrozen",
"ObjectIsExtensible",
"ObjectIs",
"ObjectGetProto",
"ObjectSetProto",
"Object.prototype.__proto__",
"BooleanToString",
"BooleanValueOf",
"NumberToString",
"Number.prototype.toString is not generic",
"toString() radix argument must be between 2 and 36",
"NumberToLocaleString",
"NumberValueOf",
"incompatible_method_receiver",
"NumberIsFinite",
"NumberIsInteger",
"NumberIsNaN",
"NumberIsSafeInteger",
"MathAbs",
"MAX_SAFE_INTEGER",
"MAX_VALUE",
"MIN_VALUE",
"NEGATIVE_INFINITY",
"POSITIVE_INFINITY",
"MIN_SAFE_INTEGER",
"EPSILON",
"FunctionToString",
"FunctionBind",
"paren_in_arg_string",
"visited_arrays",
"ArraySort",
"q",
"ArrayToString",
"ArrayJoin",
"ArrayToLocaleString",
"Array.prototype.join",
"Array.prototype.concat",
"ArrayReverse",
"Array.prototype.reverse",
"array_functions_change_sealed",
"Array.prototype.slice",
"array_functions_on_frozen",
"Array.prototype.sort",
"t",
"w",
"z",
"A",
"B",
"C",
"D",
"G",
"H",
"I",
"J",
"K",
"L",
"M",
"O",
"W",
"aa",
"ab",
"ac",
"ArrayFilter",
"Array.prototype.filter",
"ArrayForEach",
"ArraySome",
"ArrayEvery",
"ArrayMap",
"ArrayIndexOf",
"Array.prototype.indexOf",
"ArrayLastIndexOf",
"ArrayReduce",
"reduce_no_initial",
"ArrayReduceRight",
"ArrayIsArray",
"StringToString",
"StringValueOf",
"StringCharAt",
"String.prototype.charAt",
"StringCharCodeAt",
"String.prototype.charCodeAt",
"StringConcat",
"String.prototype.indexOf",
"String.prototype.lastIndexOf",
"String.prototype.match",
"lastMatchInfo",
"lastMatchInfoOverride",
"$RegExp",
"NORMALIZATION_FORMS",
"StringNormalize",
", ",
"reusableMatchInfo",
"StringReplace",
"String.prototype.replace",
"$",
"reusableReplaceArray",
"StringSearch",
"StringSlice",
"String.prototype.slice",
"String.prototype.split",
"ArrayPushBuiltin",
"StringSubstring",
"String.prototype.subString",
"StringSubstr",
"String.prototype.substr",
"String.prototype.toLowerCase",
"StringToLocaleLowerCase",
"String.prototype.toUpperCase",
"StringToLocaleUpperCase",
"StringTrimLeft",
"StringTrimRight",
"StringFromCharCode",
"StringLink",
"StringAnchor",
"StringFontcolor",
"StringFontsize",
"StringBig",
"StringBlink",
"StringBold",
"StringFixed",
"StringItalics",
"StringSmall",
"StringStrike",
"StringSub",
"StringSup",
"hexCharArray",
"hexCharCodeArray",
"$URIError",
"URIDecode",
"URIDecodeComponent",
"URIEncode",
"URIEncodeComponent",
"1",
"2",
"3",
"4",
"5",
"6",
"8",
"9",
"$floor",
"$abs",
"$Math",
"MathCeil",
"MathCos",
"MathLog",
"MathMax",
"MathMin",
"MathPow",
"rngstate",
"MathRandom",
"MathImul",
"MathRound",
"MathSin",
"MathSqrt",
"MathTan",
"kInversePiHalf",
"kInversePiHalfS26",
"kS26",
"kTwoStepThreshold",
"kPiHalf",
"kPiHalf1",
"kPiHalf2",
"kSamples",
"kIndexConvert",
"kSinTable",
"kCosXIntervalTable",
"LN10",
"LN2",
"LOG2E",
"LOG10E",
"PI",
"SQRT1_2",
"SQRT2",
"kMessages",
"cyclic_proto",
"code_gen_from_strings",
"generator_running",
"generator_finished",
"unexpected_token",
"unexpected_token_number",
"unexpected_token_string",
"unexpected_token_identifier",
"unexpected_reserved",
"unexpected_strict_reserved",
"unexpected_eos",
"malformed_regexp",
"unterminated_regexp",
"regexp_flags",
"multiple_defaults_in_switch",
"newline_after_throw",
"label_redeclaration",
"var_redeclaration",
"no_catch_or_finally",
"uncaught_exception",
"stack_trace",
"undefined_method",
"property_not_function",
"not_constructor",
"not_defined",
"non_object_property_load",
"non_object_property_store",
"with_expression",
"illegal_invocation",
"no_setter_in_callback",
"non_extensible_proto",
"handler_non_object",
"proto_non_object",
"trap_function_expected",
"invalid_weakmap_key",
"invalid_weakset_value",
"not_date_object",
"observe_non_object",
"observe_non_function",
"observe_callback_frozen",
"observe_invalid_accept",
"observe_type_non_string",
"observe_perform_non_string",
"observe_perform_non_function",
"observe_notify_non_notifier",
"observe_global_proxy",
"not_typed_array",
"data_view_not_array_buffer",
"constructor_not_function",
"not_a_symbol",
"not_a_promise",
"resolver_not_a_function",
"promise_cyclic",
"first_argument_not_regexp",
"invalid_array_length",
"invalid_array_buffer_length",
"invalid_string_length",
"invalid_typed_array_offset",
"invalid_typed_array_length",
"invalid_typed_array_alignment",
"typed_array_set_source_too_large",
"typed_array_set_negative_offset",
"invalid_data_view_offset",
"invalid_data_view_length",
"invalid_data_view_accessor_offset",
"invalid_time_value",
"invalid_count_value",
"invalid_lhs_in_assignment",
"invalid_lhs_in_for",
"invalid_lhs_in_postfix_op",
"invalid_lhs_in_prefix_op",
"not_isvar",
"single_function_literal",
"invalid_regexp_flags",
"invalid_regexp",
"illegal_break",
"illegal_continue",
"illegal_return",
"illegal_let",
"error_loading_debugger",
"no_input_to_regexp",
"invalid_json",
"circular_structure",
"array_indexof_not_defined",
"object_not_extensible",
"illegal_access",
"invalid_cached_data_function",
"invalid_cached_data",
"strict_mode_with",
"strict_eval_arguments",
"too_many_arguments",
"too_many_parameters",
"too_many_variables",
"strict_param_dupe",
"strict_octal_literal",
"strict_duplicate_property",
"accessor_data_property",
"accessor_get_set",
"strict_delete",
"strict_delete_property",
"strict_const",
"strict_function",
"strict_read_only_property",
"strict_cannot_assign",
"strict_poison_pill",
"strict_caller",
"unprotected_let",
"unprotected_const",
"cant_prevent_ext_external_array_elements",
"redef_external_array_element",
"harmony_const_assign",
"invalid_module_path",
"module_type_error",
"module_export_undefined",
"...<omitted>...",
"#<error>",
"x",
"ErrorToString",
"$Error",
"Not supported",
"<unknown message ",
"locationFromPosition",
"line",
"restrict",
"sourceText",
"$SyntaxError",
"$ReferenceError",
"lineCount",
"position",
"lineFromPosition",
"hasCachedNameOrSourceURL",
"cachedNameOrSourceURL",
"locationFromLine",
"sourceSlice",
"sourceLine",
"nameOrSourceURL",
"script",
"column",
"end",
"kLineLengthLimit",
"from_line",
"to_line",
"from_position",
"to_position",
"CallSiteReceiverKey",
"CallSiteFunctionKey",
"CallSitePositionKey",
"CallSiteStrictModeKey",
"isNative",
"getScriptNameOrSourceURL",
"isEval",
"getEvalOrigin",
"getLineNumber",
"getColumnNumber",
"getFunctionName",
"isConstructor",
"isToplevel",
"getMethodName",
"new ",
"receiver",
"fun",
"pos",
"getThis",
"getTypeName",
"getFunction",
"getFileName",
"getPosition",
"<error: ",
"ee",
"<error>",
"formatting_custom_stack_trace",
"stackTraceLimit",
"visited_errors",
"cyclic_error_marker",
": ",
"Error.prototype.toString",
"$Date",
"kApiFunctionCache",
"functionCache",
"Unknown API tag <",
"Bad properties array",
"timezone_cache_time",
"timezone_cache_timezone",
"Date_cache",
"time",
"DateParse",
"WeekDays",
"Months",
"LongWeekDays",
"LongMonths",
"parse_buffer",
"DateUTC",
"DateNow",
"DateToString",
"DateToDateString",
"DateToTimeString",
"DateToLocaleString",
"DateToLocaleDateString",
"DateToLocaleTimeString",
"DateValueOf",
"DateGetTime",
"DateGetFullYear",
"DateGetUTCFullYear",
"DateGetMonth",
"DateGetUTCMonth",
"DateGetDate",
"DateGetUTCDate",
"DateGetDay",
"DateGetUTCDay",
"DateGetHours",
"DateGetUTCHours",
"DateGetMinutes",
"DateGetUTCMinutes",
"DateGetSeconds",
"DateGetUTCSeconds",
"DateGetMilliseconds",
"DateGetUTCMilliseconds",
"DateGetTimezoneOffset",
"DateSetTime",
"DateSetMilliseconds",
"DateSetUTCMilliseconds",
"DateSetSeconds",
"DateSetUTCSeconds",
"DateSetMinutes",
"DateSetUTCMinutes",
"DateSetHours",
"DateSetUTCHours",
"DateSetDate",
"DateSetUTCDate",
"DateSetMonth",
"DateSetUTCMonth",
"DateSetFullYear",
"DateSetUTCFullYear",
"DateToUTCString",
"DateGetYear",
"DateSetYear",
"DateToGMTString",
"DateToISOString",
"DateToJSON",
"date_cache_version_holder",
"date_cache_version",
"$JSON",
"JSONParse",
",\n",
"[\n",
"[]",
"{}",
"JSONStringify",
"          ",
"RegExpExec",
"regexp_key",
"regexp_val",
"RegExpTest",
"RegExp.prototype.test",
"RegExpToString",
"$_",
"$input",
"$*",
"lastMatch",
"$&",
"lastParen",
"$+",
"leftContext",
"$`",
"rightContext",
"$'",
"$1",
"$2",
"$3",
"$4",
"$5",
"$6",
"$7",
"$8",
"$9",
"$ArrayBuffer",
"ArrayBufferGetByteLen",
"ArrayBufferSlice",
"Uint8Array_GetBuffer",
"Uint8Array_GetByteLength",
"Uint8Array_GetByteOffset",
"Uint8Array_GetLength",
"$Uint8Array",
"Uint8ArraySubArray",
"Int8Array_GetBuffer",
"Int8Array_GetByteLength",
"Int8Array_GetByteOffset",
"Int8Array_GetLength",
"$Int8Array",
"Int8ArraySubArray",
"Uint16Array_GetBuffer",
"Uint16Array_GetByteLength",
"Uint16Array_GetByteOffset",
"Uint16Array_GetLength",
"$Uint16Array",
"Uint16ArraySubArray",
"Int16Array_GetBuffer",
"Int16Array_GetByteLength",
"Int16Array_GetByteOffset",
"Int16Array_GetLength",
"$Int16Array",
"Int16ArraySubArray",
"Uint32Array_GetBuffer",
"Uint32Array_GetByteLength",
"Uint32Array_GetByteOffset",
"Uint32Array_GetLength",
"$Uint32Array",
"Uint32ArraySubArray",
"Int32Array_GetBuffer",
"Int32Array_GetByteLength",
"Int32Array_GetByteOffset",
"Int32Array_GetLength",
"$Int32Array",
"Int32ArraySubArray",
"Float32Array_GetBuffer",
"Float32Array_GetByteLength",
"Float32Array_GetByteOffset",
"Float32Array_GetLength",
"$Float32Array",
"Float32ArraySubArray",
"Float64Array_GetBuffer",
"Float64Array_GetByteLength",
"Float64Array_GetByteOffset",
"Float64Array_GetLength",
"$Float64Array",
"Float64ArraySubArray",
"Uint8ClampedArray_GetBuffer",
"Uint8ClampedArray_GetByteLength",
"Uint8ClampedArray_GetByteOffset",
"Uint8ClampedArray_GetLength",
"$Uint8ClampedArray",
"Uint8ClampedArraySubArray",
"BYTES_PER_ELEMENT",
"TypedArraySet",
"$DataView",
"DataViewGetByteOffset",
"DataViewGetByteLength",
"$WeakMap",
"$WeakSet",
"WeakMapGet",
"WeakMapSet",
"WeakMapHas",
"WeakMapDelete",
"WeakMapClear",
"WeakSetAdd",
"WeakSetHas",
"WeakSetDelete",
"WeakSetClear",
"$Promise",
"promiseRaw",
"promiseStatus",
"promiseValue",
"promiseOnResolve",
"promiseOnReject",
"PromiseDeferred",
"PromiseResolved",
"PromiseRejected",
"PromiseChain",
"PromiseCatch",
"PromiseThen",
"table",
"PromiseCast",
"PromiseAll",
"PromiseOne",
"keyFor",
"observationState",
"contextMaps",
"defaultAcceptTypes",
"update",
"setPrototype",
"reconfigure",
"notifierPrototype",
"ObjectObserve",
"ObjectUnobserve",
"ArrayObserve",
"ArrayUnobserve",
"ObjectNotifierNotify",
"ObjectNotifierPerformChange",
"ObjectGetNotifier",
"ex",
"ObjectDeliverChangeRecords",
"moduleLoadList",
"versions",
"http_parser",
"node",
"v8",
"zlib",
"modules",
"openssl",
"arch",
"platform",
"features",
"_nodeInitialization",
"exists",
"_third_party_main",
"_debugger",
"_eval",
"[eval]",
"NODE_UNIQUE_ID",
"cluster",
"_setupWorker",
"v8debug",
"arg",
"debugTimeout",
"NODE_DEBUG_TIMEOUT",
"setTimeout",
"runMain",
"_forceRepl",
"tty",
"isatty",
"opts",
"useGlobal",
"ignoreUndefined",
"NODE_NO_READLINE",
"terminal",
"NODE_DISABLE_COLORS",
"useColors",
"repl",
"requireRepl",
"stdin",
"setEncoding",
"utf8",
"data",
"GLOBAL",
"setInterval",
"console",
"_lazyConstants",
"_errorHandler",
"er",
"msg",
"config",
"_source",
"\\\"",
"key",
"nextTickQueue",
"asyncFlags",
"_asyncFlags",
"_runAsyncQueue",
"_loadAsyncQueue",
"_unloadAsyncQueue",
"microtasksScheduled",
"_runMicrotasks",
"tickInfo",
"kIndex",
"kLength",
"kCount",
"threw",
"obj",
"filename",
"paths",
"_contextLoad",
";\n",
"result",
"_compile",
"TTY",
"TCP",
"stdout",
"stderr",
"destroy",
"destroySoon",
"SIGWINCH",
"pause",
"openStdin",
"err",
"SIGTERM",
"errnoException",
"signalWraps",
"listener",
"NODE_CHANNEL_FD",
"cp",
"tcp_wrap",
"_forkChild",
"format",
"rawDebug",
"isWindows",
"win32",
"argv0",
"contextify",
"options",
"loaded",
"natives",
"_cache",
"native_module",
"cached",
"getCached",
"No such native module ",
"nativeModule",
"cache",
"getSource",
"wrapper",
"fn",
"DTRACE_NET_SERVER_CONNECTION",
"DTRACE_NET_STREAM_END",
"DTRACE_NET_SOCKET_READ",
"DTRACE_NET_SOCKET_WRITE",
"DTRACE_HTTP_SERVER_REQUEST",
"DTRACE_HTTP_SERVER_RESPONSE",
"DTRACE_HTTP_CLIENT_REQUEST",
"DTRACE_HTTP_CLIENT_RESPONSE",
"crypto",
"dns",
"freelist",
"http",
"_http_agent",
"_http_client",
"_http_common",
"_http_incoming",
"_http_outgoing",
"_http_server",
"https",
"os",
"punycode",
"querystring",
"readline",
"_tls_common",
"_tls_legacy",
"_tls_wrap",
"__filename",
"__dirname",
"usingDomains",
"_maxListeners",
"defaultMaxListeners",
"active",
"Domain",
"n",
"handler",
"len",
"Uncaught, unspecified \"error\" event.",
"domainEmitter",
"domainThrown",
"listener must be a function",
"newListener",
"warned",
"(node) warning: possible EventEmitter memory ",
"leak detected. %d %s listeners added. ",
"Use emitter.setMaxListeners() to increase limit.",
"list",
"formatRegExp",
"f",
"str",
"_",
"deprecate",
"noDeprecation",
"debugEnviron",
"debuglog",
"NODE_DEBUG",
"\\b",
"colors",
"_extend",
"italic",
"underline",
"inverse",
"white",
"black",
"blue",
"styles",
"special",
"date",
"val",
"idx",
"\\",
"prev",
"months",
"inherits",
"superCtor",
"super_",
"origin",
"prop",
"p",
"util.p: Use console.error() instead",
"util.exec is now called `child_process.exec`.",
"write",
"util.print: Use console.log instead",
"puts",
"util.puts: Use console.log instead",
"util.debug: Use console.error instead",
"util.error: Use console.error instead",
"pump",
"chunk",
"util.pump(): Use readableStream.pipe() instead",
"original",
"errname",
"v8binding",
"pobj",
"before",
"after",
"gc",
"asyncQueue",
"contextStack",
"currentContext",
"alUid",
"inAsyncTick",
"inErrorTick",
"kHasListener",
"HAS_CREATE_AL",
"HAS_BEFORE_AL",
"HAS_AFTER_AL",
"HAS_ERROR_AL",
"context",
"_asyncData",
"callback_flags",
"kMaxLength",
"INSPECT_MAX_BYTES",
"poolSize",
"poolOffset",
"allocPool",
"encoding",
"must start with number, buffer, array or string",
"Attempt to allocate Buffer larger than maximum ",
"size: 0x",
" bytes",
"setupBufferJS",
"isEncoding",
"hex",
"utf-8",
"ascii",
"binary",
"base64",
"ucs2",
"ucs-2",
"utf16le",
"utf-16le",
"loweredCase",
"Unknown encoding: ",
".get() is deprecated. Access using array indexes instead.",
"v",
".set() is deprecated. Set using array indexes instead.",
"writeWarned",
"writeMsg",
"ext",
"readUInt8",
"readInt8",
"readInt16LE",
"readInt16BE",
"readInt32LE",
"readInt32BE",
"writeUInt8",
"writeInt8",
"cflags",
"default_configuration",
"defines",
"include_dirs",
"libraries",
"target_defaults",
"clang",
"host_arch",
"node_install_npm",
"node_prefix",
"node_shared_cares",
"node_shared_http_parser",
"node_shared_libuv",
"node_shared_openssl",
"node_shared_v8",
"node_shared_zlib",
"node_tag",
"node_use_dtrace",
"node_use_etw",
"node_use_mdb",
"node_use_openssl",
"node_use_perfctr",
"openssl_no_asm",
"python",
"target_arch",
"uv_library",
"uv_parent_path",
"uv_use_dtrace",
"v8_enable_gdbjit",
"v8_enable_i18n_support",
"v8_no_strict_aliasing",
"v8_optimized_debug",
"v8_random_seed",
"v8_use_snapshot",
"want_separate_host_toolset",
"variables",
"parts",
"allowAboveRoot",
"up",
"last",
"splitDeviceRe",
"^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$",
"splitTailRe",
"^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$",
"dir",
"basename",
"resolvedAbsolute",
"Arguments to path.resolve must be strings",
"isAbsolute",
"trailingSlash",
"Arguments to path.join must be strings",
"relative",
"toParts",
"samePartsLength",
"outputParts",
"sep",
"delimiter",
";",
"splitPathRe",
"resolvedPath",
"segments",
"nonEmptySegments",
"segment",
"fromParts",
"dirname",
"extname",
"path.exists is now called `fs.exists`.",
"existsSync",
"path.existsSync is now called `fs.existsSync`.",
"_makeLong",
"children",
"NODE_MODULE_CONTEXTS",
"_pathCache",
"_extensions",
"modulePaths",
"globalPaths",
"_debug",
"statSync",
"packageMainCache",
"requestPath",
"jsonPath",
"package.json",
"json",
"pkg",
"main",
"Error parsing ",
"exts",
"_realpathCache",
"stats",
"isDirectory",
"EL",
"_findPath",
"request",
"cacheKey",
"PL",
"basePath",
"splitRe",
"tip",
"node_modules",
"./",
"mainPaths",
"isIndex",
"parentIdPath",
"RELATIVE: requested:",
" set ID to: ",
" from ",
"_load",
"isMain",
"Module._load REQUEST  ",
" parent: ",
"cachedModule",
"replModule",
"repl.js",
"load native module ",
"mainModule",
"hadException",
"load",
"resolvedModule",
"looking for ",
" in ",
"Cannot find module '",
"MODULE_NOT_FOUND",
"load ",
" for module ",
"extension",
"path must be a string",
"missing path",
"resolvedArgv",
"content",
"self",
"extensions",
"load submodule",
"sandbox",
"load root module",
"compiledWrapper",
"Debug",
"setBreakPoint",
".json",
".node",
"_initPaths",
"homeDir",
"USERPROFILE",
"HOME",
"lib",
".node_libraries",
".node_modules",
"nodePath",
"NODE_PATH",
"pSlice",
"expected",
"operator",
"s",
"block",
"throws",
"ifError",
"pathModule",
"kMinPoolSpace",
"O_APPEND",
"O_CREAT",
"O_EXCL",
"O_RDONLY",
"O_RDWR",
"O_SYNC",
"O_TRUNC",
"O_WRONLY",
"DEBUG",
"Path must be a string without null bytes.",
"Stats",
"atim_msec",
"mtim_msec",
"ctim_msec",
"birthtim_msec",
"FSInitialize",
"property",
"S_IFMT",
"S_IFDIR",
"isFile",
"S_IFREG",
"S_IFBLK",
"S_IFCHR",
"S_IFLNK",
"isFIFO",
"S_IFIFO",
"isSocket",
"S_IFSOCK",
"readFile",
"flag",
"Bad arguments",
"buffers",
"bytesRead",
"openSync",
"fstatSync",
"closeSync",
"readSync",
"rs",
"sr",
"r+",
"rs+",
"sr+",
"wx",
"xw",
"w+",
"wx+",
"xw+",
"ax",
"xa",
"a+",
"ax+",
"xa+",
"Unknown file open flag: ",
"_stringToFlags",
"def",
"legacy",
"writeSync",
"renameSync",
"rmdirSync",
"fsyncSync",
"mkdirSync",
"readdirSync",
"lstatSync",
"symlinkSync",
"linkSync",
"unlinkSync",
"fchmodSync",
"O_SYMLINK",
"lchmod",
"lchmodSync",
"chmodSync",
"lchown",
"lchownSync",
"fchownSync",
"chownSync",
"_toUnixTimestamp",
"utimesSync",
"futimesSync",
"writeFile",
"appendFile",
"current",
"previous",
"statWatchers",
"watchFile",
"unwatchFile",
"nextPartRe",
"(.*?)(?:[\\/\\\\]+|$)",
"splitRootRe",
"^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*",
"seenLinks",
"knownHard",
"resolvedLink",
"linkTarget",
"pool",
"FileReadStream",
"_read",
"bytesWritten",
"FileWriteStream",
"_write",
"E2BIG",
"EACCES",
"EADDRINUSE",
"EADDRNOTAVAIL",
"EAFNOSUPPORT",
"EAGAIN",
"EALREADY",
"EBADF",
"EBADMSG",
"EBUSY",
"ECANCELED",
"ECHILD",
"ECONNABORTED",
"ECONNREFUSED",
"ECONNRESET",
"EDEADLK",
"EDESTADDRREQ",
"EDOM",
"EDQUOT",
"EEXIST",
"EFAULT",
"EFBIG",
"EHOSTUNREACH",
"EIDRM",
"EILSEQ",
"EINPROGRESS",
"EINTR",
"EINVAL",
"EIO",
"EISCONN",
"EISDIR",
"ELOOP",
"EMFILE",
"EMLINK",
"EMSGSIZE",
"EMULTIHOP",
"ENAMETOOLONG",
"ENETDOWN",
"ENETRESET",
"ENETUNREACH",
"ENFILE",
"ENOBUFS",
"ENODATA",
"ENODEV",
"ENOENT",
"ENOEXEC",
"ENOLCK",
"ENOLINK",
"ENOMEM",
"ENOMSG",
"ENOPROTOOPT",
"ENOSPC",
"ENOSR",
"ENOSTR",
"ENOSYS",
"ENOTCONN",
"ENOTDIR",
"ENOTEMPTY",
"ENOTSOCK",
"ENOTSUP",
"ENOTTY",
"ENXIO",
"EOPNOTSUPP",
"EOVERFLOW",
"EPERM",
"EPIPE",
"EPROTO",
"EPROTONOSUPPORT",
"EPROTOTYPE",
"ERANGE",
"EROFS",
"ESPIPE",
"ESRCH",
"ESTALE",
"ETIME",
"ETIMEDOUT",
"ETXTBSY",
"EWOULDBLOCK",
"EXDEV",
"SIGHUP",
"SIGINT",
"SIGQUIT",
"SIGILL",
"SIGTRAP",
"SIGABRT",
"SIGIOT",
"SIGBUS",
"SIGFPE",
"SIGKILL",
"SIGUSR1",
"SIGSEGV",
"SIGUSR2",
"SIGPIPE",
"SIGALRM",
"SIGCHLD",
"SIGCONT",
"SIGSTOP",
"SIGTSTP",
"SIGTTIN",
"SIGTTOU",
"SIGURG",
"SIGXCPU",
"SIGXFSZ",
"SIGVTALRM",
"SIGPROF",
"SIGIO",
"SIGSYS",
"SSL_OP_ALL",
"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION",
"SSL_OP_CIPHER_SERVER_PREFERENCE",
"SSL_OP_CISCO_ANYCONNECT",
"SSL_OP_COOKIE_EXCHANGE",
"SSL_OP_CRYPTOPRO_TLSEXT_BUG",
"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS",
"SSL_OP_EPHEMERAL_RSA",
"SSL_OP_LEGACY_SERVER_CONNECT",
"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER",
"SSL_OP_MICROSOFT_SESS_ID_BUG",
"SSL_OP_MSIE_SSLV2_RSA_PADDING",
"SSL_OP_NETSCAPE_CA_DN_BUG",
"SSL_OP_NETSCAPE_CHALLENGE_BUG",
"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG",
"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG",
"SSL_OP_NO_COMPRESSION",
"SSL_OP_NO_QUERY_MTU",
"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION",
"SSL_OP_NO_SSLv2",
"SSL_OP_NO_SSLv3",
"SSL_OP_NO_TICKET",
"SSL_OP_NO_TLSv1",
"SSL_OP_NO_TLSv1_1",
"SSL_OP_NO_TLSv1_2",
"SSL_OP_PKCS1_CHECK_1",
"SSL_OP_PKCS1_CHECK_2",
"SSL_OP_SINGLE_DH_USE",
"SSL_OP_SINGLE_ECDH_USE",
"SSL_OP_SSLEAY_080_CLIENT_DH_BUG",
"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG",
"SSL_OP_TLS_BLOCK_PADDING_BUG",
"SSL_OP_TLS_D5_BUG",
"SSL_OP_TLS_ROLLBACK_BUG",
"ENGINE_METHOD_DSA",
"ENGINE_METHOD_DH",
"ENGINE_METHOD_RAND",
"ENGINE_METHOD_ECDH",
"ENGINE_METHOD_ECDSA",
"ENGINE_METHOD_CIPHERS",
"ENGINE_METHOD_DIGESTS",
"ENGINE_METHOD_STORE",
"ENGINE_METHOD_PKEY_METHS",
"ENGINE_METHOD_PKEY_ASN1_METHS",
"ENGINE_METHOD_ALL",
"ENGINE_METHOD_NONE",
"DH_CHECK_P_NOT_SAFE_PRIME",
"DH_CHECK_P_NOT_PRIME",
"DH_UNABLE_TO_CHECK_GENERATOR",
"DH_NOT_SUITABLE_GENERATOR",
"NPN_ENABLED",
"RSA_PKCS1_PADDING",
"RSA_SSLV23_PADDING",
"RSA_NO_PADDING",
"RSA_PKCS1_OAEP_PADDING",
"RSA_X931_PADDING",
"RSA_PKCS1_PSS_PADDING",
"POINT_CONVERSION_COMPRESSED",
"POINT_CONVERSION_UNCOMPRESSED",
"POINT_CONVERSION_HYBRID",
"O_NOCTTY",
"O_DIRECTORY",
"O_NOFOLLOW",
"O_NONBLOCK",
"S_IRWXU",
"S_IRUSR",
"S_IWUSR",
"S_IXUSR",
"S_IRWXG",
"S_IRGRP",
"S_IWGRP",
"S_IXGRP",
"S_IRWXO",
"S_IROTH",
"S_IWOTH",
"S_IXOTH",
"UV_UDP_REUSEADDR",
"EE",
"state",
"isPaused",
"MAX_HWM",
"unpipe",
"res",
"_fromList",
"STREAM",
"cork",
"uncork",
"_writev",
"_transform",
"Types",
"Int8",
"Uint8",
"Int16",
"Uint16",
"Int32",
"Uint32",
"Float",
"Double",
"Uint8Clamped",
"MODULE",
"[\\/\\\\]",
"../lib",
"/coffee-script/command",
"run",
"BANNER",
"CoffeeScript",
"SWITCHES",
"helpers",
"joinTimeout",
"mkdirp",
"notSources",
"optionParser",
"optparse",
"sourceCode",
"sources",
"useWinPathSep",
"watchedDirs",
"_ref",
"item",
"./helpers",
"./optparse",
"./coffee-script",
"extend",
"replCliOpts",
"_len",
"_ref1",
"_results",
"./repl",
"topLevel",
"files",
"_error",
"File not found: ",
"isCoffee",
"FILE_EXTENSIONS",
"compiled",
"task",
"register",
"isLiterate",
"js",
"sourceMap",
"v3SourceMap",
"success",
"jsPath",
"failure",
"\u0007",
"srcDir",
"jsDir",
"func",
"tag",
"token",
"answer",
"header",
"merge",
"sourceRoot",
"sourceFiles",
"generatedFile",
"VERSION",
"flatten",
"repeat",
"starts",
"ends",
"back",
"compact",
"count",
"num",
"overrides",
"element",
"flattened",
"del",
"lines",
"first_line",
"first_column",
"last_line",
"last_column",
"locationData",
"stripExt",
"pathSep",
"_ref2",
"tab",
"LONG_FLAG",
"MULTI_FLAG",
"OPTIONAL",
"SHORT_FLAG",
"rules",
"banner",
"isOption",
"matchedRule",
"originalArgs",
"rule",
"seenNonOptionArg",
"skippingArgument",
"_len1",
"shortFlag",
"longFlag",
"hasArgument",
"isList",
"unrecognized option: ",
"description",
"tuple",
"lexer",
"parser",
"sourceMaps",
"./lexer",
"./parser",
"./sourcemap",
"currentColumn",
"currentLine",
"fragment",
"fragments",
"newLines",
"tokenize",
"shiftLine",
"noReplace",
"Generated by CoffeeScript ",
"// ",
"moduleCache",
"./register",
"yytext",
"yylloc",
"errorToken",
"yylineno",
"setInput",
"yy",
"./nodes",
"end of input",
"indentation",
"BOM",
"CALLABLE",
"CODE",
"COFFEE_ALIASES",
"COFFEE_ALIAS_MAP",
"COFFEE_KEYWORDS",
"COMMENT",
"HEREDOC",
"HEREDOC_ILLEGAL",
"HEREDOC_INDENT",
"HEREGEX",
"HEREGEX_OMIT",
"INDENTABLE_CLOSERS",
"INDEXABLE",
"INVERSES",
"JSTOKEN",
"JS_FORBIDDEN",
"JS_KEYWORDS",
"LINE_BREAK",
"LINE_CONTINUER",
"MULTILINER",
"MULTI_DENT",
"NOT_REGEX",
"NOT_SPACED_REGEX",
"OPERATOR",
"RESERVED",
"SIMPLESTR",
"STRICT_PROSCRIBED",
"TRAILING_SPACES",
"WHITESPACE",
"./rewriter",
"consumed",
"indent",
"baseIndent",
"indebt",
"outdebt",
"indents",
"chunkLine",
"chunkColumn",
"clean",
"lineToken",
"stringToken",
"numberToken",
"regexToken",
"jsToken",
"missing ",
"rewrite",
"colon",
"colonOffset",
"forcedIdentifier",
"idLength",
"poppedToken",
"tagToken",
"_ref3",
"_ref4",
"own",
"spaced",
"seenFor",
"UNLESS",
"reserved",
"reserved word \"",
"binaryLiteral",
"lexedLength",
"octalLiteral",
"radix prefix '",
"' must be lowercase",
"exponential notation '",
"' must be indicated with a lowercase 'e'",
"decimal literal '",
"' must not be prefixed with '0'",
"octal literal '",
"' must be prefixed with '0o'",
"0x",
"inner",
"innerLen",
"numBreak",
"octalEsc",
"quote",
"trimmed",
'#{',
"strOffset",
"escapeLines",
"octal escape sequences ",
" are not allowed",
"doc",
"heredoc",
"makeString",
"comment",
"here",
"herecomment",
"`",
"regex",
"/*",
"regular expressions cannot begin with `*`",
"diff",
"noNewlines",
"unfinished",
"missing indentation",
"moveOut",
"outdentLength",
"decreasedIndent",
"dent",
"lastIndent",
"pair",
"nline",
"newLine",
"_ref5",
"\" can't be assigned",
"tok",
"continueCount",
"letter",
"#",
", starting",
"expr",
"offsetInChunk",
"makeToken",
"stringEnd",
"wanted",
"unmatched ",
"lastCharacter",
"BALANCED_PAIRS",
"CALL_CLOSERS",
"EXPRESSION_CLOSE",
"EXPRESSION_END",
"EXPRESSION_START",
"IMPLICIT_CALL",
"IMPLICIT_END",
"IMPLICIT_FUNC",
"IMPLICIT_UNSPACED_CALL",
"LINEBREAKS",
"SINGLE_CLOSERS",
"SINGLE_LINERS",
"left",
"rite",
"generated",
"scanTokens",
"detectEnd",
"levels",
"matchTags",
"fuzz",
"pattern",
"nextTag",
"prevTag",
"prevToken",
"sameLine",
"stackIdx",
"stackTag",
"startIdx",
"startsLine",
"ours",
"CONTROL",
"insideForDeclaration",
"nextLocation",
"prevLocation",
"explicit",
"outdent",
"starter",
"fromThen",
"symbols_",
"Root",
"Body",
"Line",
"Expression",
"Statement",
"Invocation",
"Operation",
"Identifier",
"AlphaNumeric",
"Assignable",
"AssignObj",
"ObjAssignable",
"ThisProperty",
"ParamList",
"FuncGlyph",
"OptComma",
"ParamVar",
"SimpleAssignable",
"Accessor",
"Parenthetical",
"This",
"IndexValue",
"AssignList",
"OptFuncExist",
"ArgList",
"RangeDots",
"Arg",
"SimpleArgs",
"Catch",
"WhileSource",
"Loop",
"ForBody",
"ForStart",
"ForSource",
"ForVariables",
"ForValue",
"Whens",
"When",
"IfBlock",
"$accept",
"$end",
"terminals_",
"productions_",
"performAction",
"yyleng",
"yystate",
"$$",
"_$",
"$0",
"boundfunc",
"soak",
"inclusive",
"exclusive",
"invert",
"addBody",
"addElse",
"statement",
"defaultActions",
"vstack",
"lstack",
"recovering",
"TERROR",
"EOF",
"yyloc",
"ranges",
"preErrorSymbol",
"yyval",
"newState",
"errStr",
"showPosition",
"Parse error on line ",
":\n",
"\nExpecting ",
", got '",
": Unexpected ",
"text",
"loc",
"Parse Error: multiple actions possible at state: ",
", token: ",
"*/",
"BASE64_CHARS",
"VLQ_CONTINUATION_BIT",
"VLQ_SHIFT",
"VLQ_VALUE_MASK",
"encodeVlq",
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
"HEXNUM",
"IDENTIFIER_STR",
"IS_REGEX",
"IS_STRING",
"LEVEL_ACCESS",
"LEVEL_COND",
"LEVEL_LIST",
"LEVEL_OP",
"LEVEL_PAREN",
"LEVEL_TOP",
"METHOD_DEF",
"SIMPLENUM",
"TAB",
"__super__",
"./scope",
"unknown",
"lvl",
"level",
"isStatement",
"compileNode",
"jumps",
"sharedScope",
"contains",
"reused",
"isComplex",
"scope",
"makeCode",
"cacheValues",
"makeReturn",
"me",
"unwrapAll",
"idt",
"tree",
"eachChild",
"attr",
"unwrap",
"isChainable",
"assigns",
"fragmentsList",
"joinStr",
"_super",
"compileRoot",
"compiledNodes",
"top",
"front",
"\n\n",
"void 0",
"prelude",
"preludeExps",
"rest",
"locals",
"parameter",
"(function() {\n",
"\n}).call(this);\n",
"declars",
"post",
"hasAssignments",
"var ",
"bound",
" \"",
"props",
"bareLiteral",
"isRange",
"isRegex",
"isAtomic",
"isSplice",
"onlyGenerated",
"looksStatic",
"unfoldedSoak",
"_this",
"fst",
"ifn",
"snd",
"isNew",
"isSuper",
"literal is not a function",
"newInstance",
"namedMethod",
"klass",
"superThis",
"typeof ",
" === \"function\"",
"argIndex",
"compiledArgs",
"compiledArray",
"preface",
".call(",
" = ",
"asKey",
"fromC",
"fromVar",
"toC",
"toVar",
"stepVar",
"fromNum",
"toNum",
"stepNum",
"cond",
"condPart",
"gt",
"idxName",
"known",
"lt",
"namedIndex",
"stepPart",
"varPart",
" <",
" >",
" > 0",
" <= ",
" ? ",
" : ",
" += ",
" ? ++",
" : --",
"++ : ",
"; ",
"results",
"return ",
"for (",
"lastNoncom",
"({})",
"cannot have an implicit value in an implicit object",
"Invalid object key",
"objs",
"compiledObjs",
"setContext",
"lhs",
"assign",
"exprs",
"classScope",
"walkBody",
"noReturn",
"makeScope",
"forbidden",
"param",
"subpattern",
"variable name may not be \"",
"compiledName",
"isValue",
"varBase",
"\" cannot be assigned",
"find",
"ivar",
"_ref6",
"_ref7",
".length - 1",
"check",
"isExistentialEquals",
"].concat(",
"parentScope",
"lit",
"splats",
"uniqs",
"wasEmpty",
"_k",
"_l",
"_len2",
"_len3",
"_len4",
"_len5",
"_m",
"_n",
"shared",
"asReference",
"splat",
" == null",
"multiple parameters named '",
") {",
"iterator",
"eachName",
"parameter name \"",
"\" is not allowed",
"reference",
"illegal parameter ",
"compiledNode",
"concatPart",
".concat(",
"returns",
"rvar",
" = [];\n",
"CONVERSIONS",
"INVERSIONS",
"op",
"flip",
"generateDo",
"isUnary",
"isChain",
"rhs",
"delete operand may not be argument or var",
"cannot increment/decrement \"",
"modulo",
"index cannot be a pattern matching expression",
"indexes do not apply to range loops",
"cannot pattern match over range loops",
"cannot use own with for-in",
"bodyFragments",
"compareDown",
"declare",
"declareDown",
"defPart",
"defPartFragments",
"down",
"forPartFragments",
"guardPart",
"idt1",
"increment",
"kvar",
"kvarAssign",
"lastJumps",
"lvar",
"namePart",
"resultPart",
"returnResult",
"svar",
" = 0, ",
".length",
" < ",
" >= 0",
" > 0 ? ",
" > 0 ? (",
") : ",
"if (!",
"hasProp",
")) continue;",
"defs",
"_ref8",
"bodyNode",
"ensureBlock",
"[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*",
"^(",
")(\\.prototype)?(?:\\.(",
")|\\[(\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*')\\]|\\[(0x[\\da-fA-F]+|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\])$",
"positions",
"immediate",
"temporary",
"reserve",
"temp",
"realVars",
"tempVars",
"process_wrap",
"spawn_sync",
"handleWraps",
"cons",
"pipe_wrap",
"udp_wrap",
"net.Native",
"simultaneousAccepts",
"got",
"net.Server",
"net.Socket",
"_setupSlave",
"postSend",
"_request",
"INTERNAL_PREFIX",
"NODE_",
"fork",
"execFile",
"_deprecatedCustomFds",
"child_process: customFds option is deprecated, use stdio instead.",
"UV_EAGAIN",
"UV_EMFILE",
"UV_ENFILE",
"UV_ENOENT",
"UV_ESRCH",
"UV_EINVAL",
"UV_ENOSYS",
"cares",
"cares_wrap",
"_normalizeConnectArgs",
"_destroy",
"enroll",
"unenroll",
"_onTimeout",
"setNoDelay",
"readyState",
"bufferSize",
"UV_EOF",
"remoteAddress",
"remoteFamily",
"remotePort",
"localAddress",
"localPort",
"createServerHandle",
"_listen2",
"UV_EADDRINUSE",
"listenFD",
"listenFD is deprecated. Use listen({fd: <number>}).",
"isIPv4",
"isIPv6",
"timer_wrap",
"TIMEOUT_MAX",
"timer",
"lists",
"_idleNext",
"_idlePrev",
"immediateQueue",
"_onImmediate",
"unrefList",
"unrefTimer",
"TIMER",
"AF_INET",
"AF_INET6",
"AF_UNSPEC",
"AI_ADDRCONFIG",
"AI_V4MAPPED",
"UV_E2BIG",
"UV_EACCES",
"UV_EADDRNOTAVAIL",
"UV_EAFNOSUPPORT",
"UV_EAI_ADDRFAMILY",
"UV_EAI_AGAIN",
"UV_EAI_BADFLAGS",
"UV_EAI_BADHINTS",
"UV_EAI_CANCELED",
"UV_EAI_FAIL",
"UV_EAI_FAMILY",
"UV_EAI_MEMORY",
"UV_EAI_NODATA",
"UV_EAI_NONAME",
"UV_EAI_OVERFLOW",
"UV_EAI_PROTOCOL",
"UV_EAI_SERVICE",
"UV_EAI_SOCKTYPE",
"UV_EALREADY",
"UV_EBADF",
"UV_EBUSY",
"UV_ECANCELED",
"UV_ECHARSET",
"UV_ECONNABORTED",
"UV_ECONNREFUSED",
"UV_ECONNRESET",
"UV_EDESTADDRREQ",
"UV_EEXIST",
"UV_EFAULT",
"UV_EFBIG",
"UV_EHOSTUNREACH",
"UV_EINTR",
"UV_EIO",
"UV_EISCONN",
"UV_EISDIR",
"UV_ELOOP",
"UV_EMSGSIZE",
"UV_ENAMETOOLONG",
"UV_ENETDOWN",
"UV_ENETUNREACH",
"UV_ENOBUFS",
"UV_ENODEV",
"UV_ENOMEM",
"UV_ENONET",
"UV_ENOPROTOOPT",
"UV_ENOSPC",
"UV_ENOTCONN",
"UV_ENOTDIR",
"UV_ENOTEMPTY",
"UV_ENOTSOCK",
"UV_ENOTSUP",
"UV_EPERM",
"UV_EPIPE",
"UV_EPROTO",
"UV_EPROTONOSUPPORT",
"UV_EPROTOTYPE",
"UV_ERANGE",
"UV_EROFS",
"UV_ESHUTDOWN",
"UV_ESPIPE",
"UV_ETIMEDOUT",
"UV_ETXTBSY",
"UV_EXDEV",
"UV_UNKNOWN",
"UV_ENXIO",
"UV_EMLINK",
"NET",
"BIND_STATE_UNBOUND",
"BIND_STATE_BINDING",
"BIND_STATE_BOUND",
"sendto",
"\\\\|\\/",
"curExtension",
"../../bin/coffee",
"^0x",
"addon",
"../build/Release/addon",
"../build/Debug/addon",
"kForkFlag",
"kSignalFlag",
"NODE_HEAPDUMP_OPTIONS",
"option",
"nofork",
"nosignal",
"node-heapdump: unrecognized option:",
"configure",
"\r",
"(StoreBufferOverflowStub code)",
"(StubFailureTrampolineStub code)",
"(ArrayNoArgumentConstructorStub code)",
"(ArraySingleArgumentConstructorStub code)",
"(ArrayNArgumentsConstructorStub code)",
"(RecordWriteStub code)",
"(CreateAllocationSiteStub code)",
"(DoubleToIStub code)",
"(CallConstructStub code)",
"(NameDictionaryLookupStub code)",
"(InternalArrayNoArgumentConstructorStub code)",
"(InternalArraySingleArgumentConstructorStub code)",
"(InternalArrayNArgumentsConstructorStub code)",
"(CallFunctionStub code)",
"(StringCompareStub code)",
"(StringAddStub code)",
"(FastCloneShallowArrayStub code)",
"(StoreArrayLiteralElementStub code)",
"(ArgumentsAccessStub code)",
"(NumberToStringStub code)",
"(KeyedLoadElementStub code)",
"(ToNumberStub code)",
"(FastCloneShallowObjectStub code)",
"(MathPowStub code)",
"(FastNewContextStub code)",
"(FastNewClosureStub code)",
"system / PropertyCell",
"(BinaryOpWithAllocationSiteStub code)",
"(CallApiGetterStub code)",
"(SubStringStub code)",
"(KeyedStoreElementStub code)",
"(InstanceofStub code)",
"(RegExpExecStub code)",
"(RegExpConstructResultStub code)",
"byte_array_map",
"free_space_map",
"one_pointer_filler_map",
"two_pointer_filler_map",
"undefined_value",
"instanceof_cache_map",
"null_value",
"true_value",
"false_value",
"uninitialized_value",
"cell_map",
"global_property_cell_map",
"shared_function_info_map",
"meta_map",
"heap_number_map",
"native_context_map",
"fixed_array_map",
"code_map",
"scope_info_map",
"fixed_cow_array_map",
"fixed_double_array_map",
"constant_pool_array_map",
"hash_table_map",
"ordered_hash_table_map",
"materialized_objects",
"empty_byte_array",
"empty_descriptor_array",
"empty_constant_pool_array",
"number_string_cache",
"single_character_string_cache",
"string_split_cache",
"regexp_multiple_cache",
"symbol_map",
"string_map",
"ascii_string_map",
"cons_string_map",
"cons_ascii_string_map",
"sliced_string_map",
"sliced_ascii_string_map",
"external_string_map",
"external_string_with_one_byte_data_map",
"external_ascii_string_map",
"short_external_string_map",
"short_external_string_with_one_byte_data_map",
"internalized_string_map",
"ascii_internalized_string_map",
"external_internalized_string_map",
"external_internalized_string_with_one_byte_data_map",
"external_ascii_internalized_string_map",
"short_external_internalized_string_map",
"short_external_internalized_string_with_one_byte_data_map",
"short_external_ascii_internalized_string_map",
"short_external_ascii_string_map",
"undetectable_string_map",
"undetectable_ascii_string_map",
"external_int8_array_map",
"external_uint8_array_map",
"external_int16_array_map",
"external_uint16_array_map",
"external_int32_array_map",
"external_uint32_array_map",
"external_float32_array_map",
"external_float64_array_map",
"external_uint8_clamped_array_map",
"empty_external_int8_array",
"empty_external_uint8_array",
"empty_external_int16_array",
"empty_external_uint16_array",
"empty_external_int32_array",
"empty_external_uint32_array",
"empty_external_float32_array",
"empty_external_float64_array",
"empty_external_uint8_clamped_array",
"fixed_uint8_array_map",
"fixed_int8_array_map",
"fixed_uint16_array_map",
"fixed_int16_array_map",
"fixed_uint32_array_map",
"fixed_int32_array_map",
"fixed_float32_array_map",
"fixed_float64_array_map",
"fixed_uint8_clamped_array_map",
"empty_fixed_uint8_array",
"empty_fixed_int8_array",
"empty_fixed_uint16_array",
"empty_fixed_int16_array",
"empty_fixed_uint32_array",
"empty_fixed_int32_array",
"empty_fixed_float32_array",
"empty_fixed_float64_array",
"empty_fixed_uint8_clamped_array",
"sloppy_arguments_elements_map",
"function_context_map",
"catch_context_map",
"with_context_map",
"block_context_map",
"module_context_map",
"global_context_map",
"undefined_map",
"the_hole_map",
"null_map",
"boolean_map",
"uninitialized_map",
"arguments_marker_map",
"no_interceptor_result_sentinel_map",
"exception_map",
"termination_exception_map",
"message_object_map",
"foreign_map",
"nan_value",
"infinity_value",
"minus_zero_value",
"neander_map",
"message_listeners",
"code_stubs",
"non_monomorphic_cache",
"polymorphic_code_cache",
"js_entry_code",
"js_construct_entry_code",
"natives_source_cache",
"empty_script",
"intrinsic_function_names",
"undefined_cell",
"observation_state",
"external_map",
"symbol_registry",
"frozen_symbol",
"nonexistent_symbol",
"elements_transition_symbol",
"empty_slow_element_dictionary",
"observed_symbol",
"uninitialized_symbol",
"megamorphic_symbol",
"allocation_sites_scratchpad",
"microtask_state",
"Array_string",
"Object_string",
"proto_string",
"arguments_string",
"Arguments_string",
"call_string",
"apply_string",
"caller_string",
"boolean_string",
"Boolean_string",
"callee_string",
"constructor_string",
"dot_result_string",
"dot_for_string",
"dot_iterator_string",
"dot_generator_object_string",
"eval_string",
"empty_string",
"function_string",
"length_string",
"module_string",
"name_string",
"native_string",
"null_string",
"number_string",
"Number_string",
"nan_string",
"RegExp_string",
"source_string",
"global_string",
"ignore_case_string",
"multiline_string",
"input_string",
"index_string",
"last_index_string",
"object_string",
"literals_string",
"prototype_string",
"string_string",
"String_string",
"symbol_string",
"Symbol_string",
"for_string",
"for_api_string",
"for_intern_string",
"private_api_string",
"private_intern_string",
"Date_string",
"this_string",
"to_string_string",
"char_at_string",
"undefined_string",
"value_of_string",
"stack_string",
"toJSON_string",
"InitializeVarGlobal_string",
"InitializeConstGlobal_string",
"KeyedLoadElementMonomorphic_string",
"KeyedStoreElementMonomorphic_string",
"stack_overflow_string",
"illegal_access_string",
"get_string",
"set_string",
"map_field_string",
"elements_field_string",
"length_field_string",
"cell_value_string",
"function_class_string",
"illegal_argument_string",
"MakeReferenceError_string",
"MakeSyntaxError_string",
"MakeTypeError_string",
"unknown_label_string",
"space_string",
"exec_string",
"zero_string",
"global_eval_string",
"identity_hash_string",
"closure_string",
"use_strict_string",
"dot_string",
"anonymous_function_string",
"compare_ic_string",
"strict_compare_ic_string",
"infinity_string",
"minus_infinity_string",
"hidden_stack_trace_string",
"query_colon_string",
"Generator_string",
"throw_string",
"done_string",
"value_string",
"next_string",
"byte_length_string",
"byte_offset_string",
"buffer_string",
"intl_initialized_marker_string",
"intl_impl_object_string",
"box_map",
"declared_accessor_descriptor_map",
"declared_accessor_info_map",
"executable_accessor_info_map",
"accessor_pair_map",
"access_check_info_map",
"interceptor_info_map",
"call_handler_info_map",
"function_template_info_map",
"object_template_info_map",
"signature_info_map",
"type_switch_info_map",
"script_map",
"allocation_site_map",
"allocation_memento_map",
"code_cache_map",
"polymorphic_code_cache_map",
"type_feedback_info_map",
"aliased_arguments_entry_map",
"debug_info_map",
"break_point_info_map",
"relocation_info",
"handler_table",
"constant_pool",
"closure",
"global_proxy_object",
"security_token",
"boolean_function",
"number_function",
"string_function",
"string_function_prototype_map",
"object_function",
"internal_array_function",
"array_function",
"js_array_maps",
"date_function",
"json_object",
"regexp_function",
"initial_object_prototype",
"initial_array_prototype",
"create_date_fun",
"to_number_fun",
"to_string_fun",
"to_detail_string_fun",
"to_object_fun",
"to_integer_fun",
"to_uint32_fun",
"to_int32_fun",
"global_eval_fun",
"instantiate_fun",
"configure_instance_fun",
"array_buffer_fun",
"uint8_array_fun",
"int8_array_fun",
"uint16_array_fun",
"int16_array_fun",
"uint32_array_fun",
"int32_array_fun",
"float32_array_fun",
"float64_array_fun",
"uint8_clamped_array_fun",
"int8_array_external_map",
"uint8_array_external_map",
"int16_array_external_map",
"uint16_array_external_map",
"int32_array_external_map",
"uint32_array_external_map",
"float32_array_external_map",
"float64_array_external_map",
"uint8_clamped_array_external_map",
"data_view_fun",
"sloppy_function_map",
"strict_function_map",
"sloppy_function_without_prototype_map",
"strict_function_without_prototype_map",
"regexp_result_map",
"sloppy_arguments_boilerplate",
"aliased_arguments_boilerplate",
"strict_arguments_boilerplate",
"get_stack_trace_line_fun",
"function_cache",
"jsfunction_result_caches",
"normalized_map_cache",
"runtime_context",
"call_as_function_delegate",
"call_as_constructor_delegate",
"script_function",
"opaque_reference_function",
"context_extension_function",
"map_cache",
"embedder_data",
"run_microtasks",
"enqueue_microtask",
"is_promise",
"promise_create",
"promise_resolve",
"promise_reject",
"promise_chain",
"promise_catch",
"to_complete_property_descriptor",
"observers_notify_change",
"observers_enqueue_splice",
"observers_begin_perform_splice",
"observers_end_perform_splice",
"native_object_observe",
"native_object_get_notifier",
"native_object_notifier_perform_change",
"optimized_functions_list",
"optimized_code_list",
"get console",
"native_context",
"global_context",
"global_receiver",
"initial_map",
"type_feedback_info",
"get paths",
"get stdin",
"get stderr",
"get stdout"
];